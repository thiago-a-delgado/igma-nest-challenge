var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.251,1,1.463]],["body/controllers/AppController.html",[0,2.009,1,2.349,2,1.634,3,0.881,4,0.617,5,0.617,6,2.72,7,1.034,8,2.349,9,3.779,10,1.91,11,0.059,12,1.206,13,3.424,14,1.634,15,1.484,16,0.913,17,1.206,18,1.869,19,2.72,20,0.881,21,0.298,22,2.72,23,2.257,24,1.91,25,3.424,26,0.048,27,0.048]],["title/modules/AppModule.html",[28,1.463,29,1.463]],["body/modules/AppModule.html",[1,2.333,2,1.786,3,0.732,4,0.513,5,0.513,11,0.06,16,1.028,17,1.002,18,1.942,19,2.26,20,0.732,21,0.248,26,0.042,27,0.042,28,2.088,29,2.735,30,1.357,31,1.786,32,2.26,33,2.26,34,2.26,35,2.261,36,2.466,37,1.875,38,1.587,39,2.845,40,2.973,41,2.973,42,2.845,43,2.26,44,2.26,45,1.587,46,2.845,47,2.845,48,2.845,49,2.845,50,1.002,51,2.845,52,2.845,53,2.845,54,2.845,55,2.845,56,2.845,57,2.845,58,2.845,59,2.845,60,2.26,61,2.845,62,1.587,63,2.845,64,2.845,65,2.845,66,2.845,67,1.875]],["title/injectables/AppService.html",[18,1.075,68,1.251]],["body/injectables/AppService.html",[3,0.913,4,0.64,5,0.64,7,1.072,8,2.402,9,3.827,11,0.058,12,1.251,14,1.694,15,1.517,16,0.77,17,1.251,18,1.765,20,0.913,21,0.309,24,1.981,26,0.049,27,0.049,68,2.054,69,2.34,70,2.821,71,3.551,72,3.551,73,3.551,74,3.551]],["title/classes/CreateCustomerDto.html",[21,0.228,75,1.075]],["body/classes/CreateCustomerDto.html",[3,0.663,4,0.465,5,0.465,7,0.778,10,2.22,11,0.058,12,1.402,15,1.66,16,0.76,20,0.663,21,0.305,26,0.04,27,0.04,50,1.713,75,1.436,76,1.698,77,3.392,78,1.698,79,1.954,80,3.161,81,2.131,82,1.83,83,2.814,84,3.98,85,3.503,86,3.503,87,3.503,88,1.888,89,3.503,90,2.783,91,3.503,92,3.503,93,2.309,94,2.577,95,2.577,96,3.503,97,3.503,98,1.954,99,2.309,100,2.783,101,3.503,102,2.577,103,3.503,104,3.503,105,2.577,106,2.577,107,4.27,108,3.98,109,3.503,110,2.047,111,2.814,112,1.438,113,3.161,114,2.577]],["title/entities/Customer.html",[115,1.463,116,1.075]],["body/entities/Customer.html",[3,0.654,4,0.459,5,0.459,7,0.768,10,2.48,11,0.059,12,1.566,15,1.616,16,0.552,20,0.654,21,0.221,26,0.039,27,0.039,50,1.77,62,1.419,67,2.288,79,1.937,80,3.14,81,2.121,82,1.987,83,3.023,115,1.937,116,1.423,117,2.02,118,2.605,119,3.952,120,3.952,121,3.471,122,2.543,123,4.246,124,4.246,125,3.471,126,2.288,127,2.543,128,3.471,129,2.543,130,3.471,131,2.543,132,2.543,133,3.471,134,3.471,135,2.288,136,3.471,137,2.543,138,3.471,139,4.246,140,2.543,141,3.471,142,1.676,143,2.02]],["title/controllers/CustomerController.html",[0,1.251,144,1.463]],["body/controllers/CustomerController.html",[0,0.617,2,0.617,3,0.333,4,0.233,5,0.233,7,0.391,8,1.167,10,1.984,11,0.06,12,1.253,14,2.056,15,1.518,16,0.812,17,0.456,20,0.333,21,0.182,22,1.028,23,0.853,24,1.984,26,0.024,27,0.024,50,1.253,60,3.74,75,1.534,81,1.92,82,1.457,88,1.362,93,0.853,98,2.306,99,1.379,111,0.853,112,0.722,116,2.036,118,3.08,126,1.379,135,0.853,144,1.167,145,1.028,146,1.294,147,1.379,148,2.825,149,1.662,150,1.662,151,1.662,152,1.662,153,1.662,154,1.028,155,2.634,156,1.294,157,2.092,158,1.736,159,2.343,160,2.343,161,3.828,162,3.896,163,1.028,164,2.64,165,1.294,166,3.555,167,3.095,168,1.028,169,2.466,170,1.167,171,3.026,172,1.662,173,2.092,174,2.092,175,3.555,176,2.092,177,2.092,178,1.662,179,1.028,180,2.092,181,1.294,182,3.555,183,3.026,184,2.568,185,1.662,186,3.896,187,1.028,188,2.092,189,1.294,190,1.028,191,2.092,192,1.294,193,2.092,194,1.028,195,1.859,196,2.092,197,1.294,198,2.092,199,2.092,200,1.294,201,4.024,202,1.294,203,1.294,204,1.028,205,1.241,206,1.028,207,0.853,208,1.028,209,1.379,210,1.028,211,1.294,212,0.853,213,1.294,214,1.294,215,1.294,216,1.028,217,1.294,218,1.294,219,1.294,220,1.294,221,1.294,222,1.294,223,1.294,224,1.294,225,1.294,226,1.294,227,1.294,228,1.028,229,1.028,230,1.294,231,1.028,232,1.028,233,1.294,234,1.294,235,1.294,236,1.294,237,1.294]],["title/modules/CustomerModule.html",[28,1.463,35,1.251]],["body/modules/CustomerModule.html",[2,1.937,3,0.83,4,0.582,5,0.582,11,0.059,16,1.041,17,1.137,20,0.83,21,0.281,26,0.046,27,0.046,28,2.265,30,1.54,31,1.937,35,2.338,36,2.675,37,2.127,38,1.801,40,3.225,41,2.565,44,2.565,45,1.801,116,1.323,144,2.477,205,2.009,206,2.565,207,2.127,238,2.565,239,2.565,240,3.228,241,3.228,242,3.228]],["title/injectables/CustomerService.html",[68,1.251,205,1.075]],["body/injectables/CustomerService.html",[3,0.456,4,0.32,5,0.32,7,0.535,8,1.493,11,0.06,12,1.484,14,1.936,15,1.641,16,0.914,17,0.624,20,0.456,21,0.154,23,1.168,24,2.263,26,0.03,27,0.03,45,0.989,50,1.484,68,1.277,69,1.168,75,1.581,81,1.841,82,1.727,98,2.263,111,1.168,112,0.989,116,1.581,118,2.776,135,1.168,142,1.168,147,1.764,148,3.7,149,2.126,150,2.126,151,2.126,152,2.126,153,2.126,154,2.126,158,1.764,159,2.776,160,2.776,161,3.594,163,2.126,164,3.065,167,2.126,168,1.408,169,1.764,170,1.799,172,2.126,178,2.126,179,2.126,187,2.126,190,2.126,194,2.126,195,2.069,204,1.408,205,1.097,207,1.168,208,1.408,209,1.764,210,1.408,216,1.408,229,2.126,231,2.126,232,2.855,243,1.408,244,1.772,245,3.223,246,1.772,247,1.772,248,1.772,249,1.772,250,1.772,251,1.772,252,1.772,253,1.772,254,1.772,255,1.772,256,1.772,257,1.772,258,3.858,259,1.772,260,2.677,261,2.677,262,1.772,263,1.772,264,1.772,265,1.772,266,1.772,267,1.772,268,1.408,269,2.677,270,1.772,271,1.772,272,1.772]],["title/classes/UpdateCustomerDto.html",[21,0.228,195,1.251]],["body/classes/UpdateCustomerDto.html",[3,0.952,4,0.667,5,0.667,11,0.058,16,0.958,20,0.952,21,0.322,26,0.05,27,0.05,75,1.517,76,2.44,78,2.44,143,2.941,147,2.44,195,2.106,209,2.44,273,2.941,274,3.702,275,2.941,276,2.44,277,3.702]],["title/coverage.html",[278,2.336]],["body/coverage.html",[0,1.929,1,1.789,5,0.578,6,2.547,11,0.058,18,1.314,21,0.352,26,0.046,27,0.046,50,1.13,68,1.929,70,2.547,75,1.314,77,2.547,78,2.664,115,1.789,116,1.314,117,2.547,144,1.789,145,2.547,158,2.113,184,2.113,195,1.53,205,1.314,212,2.113,243,2.547,268,3.946,273,2.547,278,2.113,279,2.547,280,3.207,281,4.042,282,3.207,283,3.207,284,3.207,285,3.207,286,4.427,287,2.547,288,4.042,289,3.207,290,3.207,291,2.547,292,2.547,293,3.207,294,3.207]],["title/dependencies.html",[31,1.5,295,1.753]],["body/dependencies.html",[11,0.06,17,1.189,21,0.363,26,0.047,27,0.047,31,1.611,43,2.682,45,1.883,110,2.682,112,1.883,142,2.225,275,2.682,276,2.225,296,4.531,297,3.376,298,3.376,299,3.376,300,3.316,301,3.376,302,3.376,303,3.376,304,3.376,305,3.376,306,3.376,307,3.376,308,3.376,309,3.376,310,3.376,311,3.376,312,3.376,313,3.376,314,3.376,315,3.376,316,3.376]],["title/miscellaneous/functions.html",[317,1.753,318,2.498]],["body/miscellaneous/functions.html",[7,1.038,11,0.054,14,1.64,15,1.487,26,0.048,27,0.048,50,1.211,67,2.265,81,2.014,82,1.409,88,1.409,98,2.354,99,2.781,126,2.265,159,2.265,160,2.265,184,2.265,185,2.73,212,2.781,228,2.73,287,2.73,291,2.73,292,3.628,317,2.73,318,2.73,319,3.436,320,3.436,321,3.436,322,3.436,323,3.436,324,3.436,325,3.436,326,3.436,327,3.436,328,3.436,329,2.73,330,4.22,331,3.436]],["title/index.html",[7,0.666,332,1.753,333,1.753]],["body/index.html",[4,0.53,11,0.059,26,0.043,27,0.043,88,1.206,245,2.336,278,1.938,334,2.941,335,2.941,336,3.824,337,2.941,338,2.941,339,2.941,340,2.941,341,2.941,342,2.941,343,4.25,344,2.941,345,2.941,346,2.941,347,4.869,348,2.941,349,2.941,350,2.941,351,4.782,352,2.941,353,2.941,354,3.824,355,2.941,356,2.941,357,2.941,358,2.941,359,3.824,360,3.824,361,2.941,362,2.941,363,2.941,364,3.824,365,3.038,366,2.941,367,2.941,368,2.941,369,2.941,370,2.941,371,1.938,372,2.941,373,2.941,374,2.941,375,2.941,376,2.941,377,2.941,378,2.336,379,2.941,380,2.941,381,2.941,382,2.336,383,2.941,384,2.941,385,2.941,386,2.941,387,2.941,388,2.941,389,1.641]],["title/license.html",[332,1.753,333,1.753,389,1.231]],["body/license.html",[4,0.678,5,0.586,11,0.022,12,0.299,16,0.184,21,0.074,26,0.017,27,0.017,38,0.473,62,0.473,82,0.796,83,0.559,88,0.347,90,0.673,93,0.559,100,0.673,113,0.673,115,1.974,169,0.559,170,0.473,276,0.559,279,1.542,300,1.166,329,1.838,365,0.673,371,0.559,378,0.673,389,2.629,390,2.314,391,1.542,392,1.941,393,0.848,394,0.848,395,0.848,396,3.405,397,3.852,398,3.539,399,2.314,400,2.616,401,0.848,402,4.01,403,3.539,404,0.848,405,0.848,406,0.848,407,0.848,408,3.539,409,3.852,410,2.865,411,1.468,412,0.848,413,2.616,414,0.848,415,0.848,416,2.314,417,0.848,418,3.405,419,0.848,420,2.314,421,1.468,422,1.468,423,0.848,424,1.941,425,1.468,426,1.468,427,0.848,428,0.848,429,4.196,430,2.314,431,1.468,432,2.865,433,0.848,434,1.468,435,0.848,436,0.848,437,0.848,438,0.848,439,0.848,440,0.848,441,0.848,442,1.941,443,0.848,444,1.941,445,1.468,446,3.852,447,0.848,448,0.848,449,2.865,450,3.405,451,2.314,452,1.468,453,1.941,454,0.848,455,1.941,456,2.865,457,0.848,458,0.848,459,0.848,460,0.848,461,0.848,462,1.468,463,0.848,464,0.848,465,4.712,466,1.941,467,1.468,468,0.848,469,0.848,470,3.405,471,1.468,472,0.848,473,2.616,474,1.468,475,0.848,476,4.196,477,4.248,478,0.848,479,0.848,480,0.848,481,0.848,482,0.848,483,0.848,484,0.848,485,1.468,486,1.468,487,1.941,488,0.848,489,0.848,490,0.848,491,0.848,492,0.848,493,0.848,494,2.314,495,2.616,496,0.848,497,1.468,498,2.314,499,1.468,500,0.848,501,2.616,502,1.468,503,0.848,504,0.848,505,1.941,506,0.848,507,0.848,508,0.848,509,0.848,510,1.468,511,0.848,512,0.848,513,0.848,514,1.941,515,0.848,516,0.848,517,1.941,518,0.848,519,0.848,520,0.848,521,2.314,522,3.539,523,0.848,524,0.848,525,1.468,526,3.252,527,1.941,528,1.468,529,1.468,530,1.468,531,1.468,532,1.468,533,1.941,534,1.468,535,1.941,536,1.468,537,1.468,538,1.468,539,1.468,540,0.848,541,1.468,542,1.468,543,0.848,544,0.848,545,2.616,546,3.074,547,1.941,548,1.468,549,0.848,550,0.848,551,1.468,552,1.468,553,0.848,554,0.848,555,1.941,556,1.468,557,0.848,558,0.848,559,0.848,560,1.941,561,0.848,562,0.848,563,0.848,564,1.468,565,1.468,566,0.848,567,0.848,568,0.848,569,0.848,570,0.848,571,0.848,572,0.848,573,1.468,574,0.848,575,0.848,576,0.848,577,0.848,578,0.848,579,0.848,580,2.616,581,0.848,582,1.941,583,0.848,584,0.848,585,1.941,586,0.848,587,0.848,588,0.848,589,0.848,590,3.252,591,0.848,592,0.848,593,0.848,594,0.848,595,0.848,596,2.314,597,1.468,598,2.314,599,0.848,600,0.848,601,2.314,602,0.848,603,0.848,604,0.848,605,0.848,606,1.941,607,0.848,608,0.848,609,1.468,610,1.468,611,0.848,612,0.848,613,0.848,614,0.848,615,1.468,616,1.468,617,0.848,618,0.848,619,2.616,620,0.848,621,0.848,622,0.848,623,0.848,624,0.848,625,0.848,626,0.848,627,1.941,628,2.314,629,0.848,630,0.848,631,0.848,632,0.848,633,0.848,634,0.848,635,0.848,636,0.848,637,0.848,638,0.848,639,0.848,640,1.468,641,0.848,642,0.848,643,1.468,644,0.848,645,0.848,646,0.848,647,2.314,648,0.848,649,0.848,650,0.848,651,0.848,652,0.848,653,0.848,654,0.848,655,2.314,656,1.941,657,1.941,658,1.941,659,1.468,660,1.468,661,1.941,662,1.468,663,1.468,664,1.468,665,0.848,666,0.848,667,0.848,668,0.848,669,0.848,670,0.848,671,0.848,672,0.848,673,0.848,674,1.468,675,0.848,676,0.848,677,0.848,678,0.848,679,2.616,680,0.848,681,0.848,682,0.848,683,0.848,684,0.848,685,0.848,686,0.848,687,0.848,688,0.848,689,2.616,690,0.848,691,0.848,692,0.848,693,0.848,694,0.848,695,0.848,696,0.848,697,0.848,698,0.848,699,0.848,700,0.848,701,0.848,702,0.848,703,0.848,704,0.848,705,0.848,706,0.848,707,0.848,708,1.941,709,0.848,710,0.848,711,0.848,712,0.848,713,1.468,714,0.848,715,0.848,716,0.848,717,0.848,718,0.848,719,0.848,720,0.848,721,0.848,722,0.848,723,0.848,724,0.848,725,0.848,726,0.848,727,0.848,728,0.848,729,1.468,730,0.848,731,0.848,732,0.848,733,1.468,734,1.468,735,0.848,736,0.848,737,0.848,738,0.848,739,0.848,740,0.848,741,0.848,742,0.848,743,0.848,744,0.848,745,0.848,746,0.848,747,0.848,748,0.848,749,0.848,750,0.848,751,0.848,752,0.848,753,0.848,754,0.848]],["title/modules.html",[30,1.691]],["body/modules.html",[11,0.052,26,0.052,27,0.052,29,2.183,30,1.867,35,1.867,371,3.006,755,4.561,756,4.561,757,4.561]],["title/overview.html",[758,2.816]],["body/overview.html",[2,1.657,11,0.056,18,1.881,26,0.048,27,0.048,29,2.784,30,1.657,31,2.027,32,2.76,33,2.76,34,2.76,35,2.34,36,2.8,37,2.289,38,1.938,62,1.938,69,2.289,76,2.289,170,1.938,205,1.881,238,2.76,239,2.76,758,2.76,759,4.781]],["title/properties.html",[79,1.754,295,1.753]],["body/properties.html",[11,0.058,26,0.052,27,0.052,79,2.183,88,1.604,382,3.109,389,2.183,391,3.109,760,3.913,761,3.913]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":268,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":760,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":304,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":281,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":285,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":284,"title":{},"body":{"coverage.html":{}}}],["04",{"_index":86,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["1",{"_index":170,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"license.html":{},"overview.html":{}}}],["1/1",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":172,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["100",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":125,"title":{},"body":{"entities/Customer.html":{}}}],["1998",{"_index":85,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["2",{"_index":759,"title":{},"body":{"overview.html":{}}}],["2.0",{"_index":392,"title":{},"body":{"license.html":{}}}],["2.3.1",{"_index":297,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":87,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["2004",{"_index":394,"title":{},"body":{"license.html":{}}}],["255",{"_index":130,"title":{},"body":{"entities/Customer.html":{}}}],["4.6.2",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["42",{"_index":97,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["498.967.060",{"_index":96,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["50",{"_index":437,"title":{},"body":{"license.html":{}}}],["6.2.1",{"_index":301,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["7.2.0",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["8.10.0",{"_index":307,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":406,"title":{},"body":{"license.html":{}}}],["9.0.0",{"_index":296,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":302,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["above",{"_index":632,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":711,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":708,"title":{},"body":{"license.html":{}}}],["according",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["act",{"_index":717,"title":{},"body":{"license.html":{}}}],["acting",{"_index":415,"title":{},"body":{"license.html":{}}}],["acts",{"_index":687,"title":{},"body":{"license.html":{}}}],["add",{"_index":616,"title":{},"body":{"license.html":{}}}],["addendum",{"_index":618,"title":{},"body":{"license.html":{}}}],["additional",{"_index":619,"title":{},"body":{"license.html":{}}}],["additions",{"_index":496,"title":{},"body":{"license.html":{}}}],["advised",{"_index":706,"title":{},"body":{"license.html":{}}}],["against",{"_index":565,"title":{},"body":{"license.html":{}}}],["agree",{"_index":720,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":658,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":637,"title":{},"body":{"license.html":{}}}],["alleging",{"_index":570,"title":{},"body":{"license.html":{}}}],["alone",{"_index":561,"title":{},"body":{"license.html":{}}}],["along",{"_index":607,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":617,"title":{},"body":{"license.html":{}}}],["amazing",{"_index":372,"title":{},"body":{"index.html":{}}}],["amount",{"_index":176,"title":{},"body":{"controllers/CustomerController.html":{}}}],["and/or",{"_index":714,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":482,"title":{},"body":{"license.html":{}}}],["apache",{"_index":390,"title":{},"body":{"license.html":{}}}],["api",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["apiproperty",{"_index":111,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["apiproperty({example",{"_index":84,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["apitags",{"_index":211,"title":{},"body":{"controllers/CustomerController.html":{}}}],["apitags('customer",{"_index":214,"title":{},"body":{"controllers/CustomerController.html":{}}}],["app",{"_index":349,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appear",{"_index":612,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":474,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":656,"title":{},"body":{"license.html":{}}}],["applications",{"_index":342,"title":{},"body":{"index.html":{}}}],["applies",{"_index":554,"title":{},"body":{"license.html":{}}}],["apply",{"_index":729,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":739,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":672,"title":{},"body":{"license.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archives",{"_index":746,"title":{},"body":{"license.html":{}}}],["arising",{"_index":694,"title":{},"body":{"license.html":{}}}],["asserted",{"_index":726,"title":{},"body":{"license.html":{}}}],["associated",{"_index":677,"title":{},"body":{"license.html":{}}}],["assume",{"_index":675,"title":{},"body":{"license.html":{}}}],["async",{"_index":148,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["attach",{"_index":730,"title":{},"body":{"license.html":{}}}],["attached",{"_index":472,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":596,"title":{},"body":{"license.html":{}}}],["author",{"_index":382,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authorized",{"_index":411,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":466,"title":{},"body":{"license.html":{}}}],["available",{"_index":468,"title":{},"body":{"license.html":{}}}],["await",{"_index":232,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["b",{"_index":586,"title":{},"body":{"license.html":{}}}],["backers",{"_index":373,"title":{},"body":{"index.html":{}}}],["based",{"_index":478,"title":{},"body":{"license.html":{}}}],["baseentity",{"_index":138,"title":{},"body":{"entities/Customer.html":{}}}],["basis",{"_index":660,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":501,"title":{},"body":{"license.html":{}}}],["below",{"_index":475,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":441,"title":{},"body":{"license.html":{}}}],["bind",{"_index":492,"title":{},"body":{"license.html":{}}}],["birth",{"_index":89,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["birth_date",{"_index":121,"title":{},"body":{"entities/Customer.html":{}}}],["birthdate",{"_index":80,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{}}}],["body",{"_index":199,"title":{},"body":{"controllers/CustomerController.html":{}}}],["boilerplate",{"_index":731,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":292,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["brackets",{"_index":734,"title":{},"body":{"license.html":{}}}],["brazilian",{"_index":99,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":757,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":755,"title":{},"body":{"modules.html":{}}}],["building",{"_index":337,"title":{},"body":{"index.html":{}}}],["c",{"_index":593,"title":{},"body":{"license.html":{}}}],["carry",{"_index":588,"title":{},"body":{"license.html":{}}}],["cause",{"_index":426,"title":{},"body":{"license.html":{}}}],["challenge",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["changed",{"_index":592,"title":{},"body":{"license.html":{}}}],["character",{"_index":693,"title":{},"body":{"license.html":{}}}],["charge",{"_index":535,"title":{},"body":{"license.html":{}}}],["checks",{"_index":321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["choose",{"_index":709,"title":{},"body":{"license.html":{}}}],["citizen",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["claim",{"_index":567,"title":{},"body":{"license.html":{}}}],["claims",{"_index":556,"title":{},"body":{"license.html":{}}}],["class",{"_index":21,"title":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["classes",{"_index":76,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_customermodule",{"_index":238,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_providers",{"_index":239,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["code",{"_index":453,"title":{},"body":{"license.html":{}}}],["column",{"_index":139,"title":{},"body":{"entities/Customer.html":{}}}],["column({name",{"_index":120,"title":{},"body":{"entities/Customer.html":{}}}],["combination",{"_index":562,"title":{},"body":{"license.html":{}}}],["comment",{"_index":740,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":703,"title":{},"body":{"license.html":{}}}],["common",{"_index":419,"title":{},"body":{"license.html":{}}}],["communication",{"_index":505,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":461,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":747,"title":{},"body":{"license.html":{}}}],["complies",{"_index":625,"title":{},"body":{"license.html":{}}}],["computer",{"_index":700,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":397,"title":{},"body":{"license.html":{}}}],["configmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":454,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":692,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":716,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":518,"title":{},"body":{"license.html":{}}}],["const",{"_index":258,"title":{},"body":{"injectables/CustomerService.html":{}}}],["constitutes",{"_index":571,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":216,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["constructor(@injectrepository(customer",{"_index":256,"title":{},"body":{"injectables/CustomerService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CustomerController.html":{}}}],["constructor(repository",{"_index":244,"title":{},"body":{"injectables/CustomerService.html":{}}}],["construed",{"_index":620,"title":{},"body":{"license.html":{}}}],["contained",{"_index":603,"title":{},"body":{"license.html":{}}}],["content",{"_index":653,"title":{},"body":{"license.html":{}}}],["contents",{"_index":613,"title":{},"body":{"license.html":{}}}],["contract",{"_index":431,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":495,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":560,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":627,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":522,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":572,"title":{},"body":{"license.html":{}}}],["control",{"_index":416,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":417,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CustomerController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CustomerController.html":{},"coverage.html":{}}}],["controller('customer",{"_index":215,"title":{},"body":{"controllers/CustomerController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"overview.html":{}}}],["conversions",{"_index":463,"title":{},"body":{"license.html":{}}}],["copies",{"_index":578,"title":{},"body":{"license.html":{}}}],["copy",{"_index":585,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":409,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":568,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":278,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":81,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["create",{"_index":147,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{}}}],["create(@body",{"_index":220,"title":{},"body":{"controllers/CustomerController.html":{}}}],["create(createcustomerdto",{"_index":154,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["createcustomerdto",{"_index":75,"title":{"classes/CreateCustomerDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["creates",{"_index":157,"title":{},"body":{"controllers/CustomerController.html":{}}}],["cross",{"_index":566,"title":{},"body":{"license.html":{}}}],["current_timestamp",{"_index":136,"title":{},"body":{"entities/Customer.html":{}}}],["customary",{"_index":649,"title":{},"body":{"license.html":{}}}],["customer",{"_index":116,"title":{"entities/Customer.html":{}},"body":{"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"coverage.html":{}}}],["customer's",{"_index":105,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.controller",{"_index":241,"title":{},"body":{"modules/CustomerModule.html":{}}}],["customer.dto",{"_index":209,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts",{"_index":78,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["customer.dto.ts:13",{"_index":102,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:18",{"_index":95,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:8",{"_index":106,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.service",{"_index":206,"title":{},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{}}}],["customer/customer.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["customer\\'s",{"_index":114,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customercontroller",{"_index":144,"title":{"controllers/CustomerController.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"coverage.html":{}}}],["customermodule",{"_index":35,"title":{"modules/CustomerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules.html":{},"overview.html":{}}}],["customers",{"_index":167,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["customers).length",{"_index":267,"title":{},"body":{"injectables/CustomerService.html":{}}}],["customerservice",{"_index":205,"title":{"injectables/CustomerService.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"coverage.html":{},"overview.html":{}}}],["d",{"_index":599,"title":{},"body":{"license.html":{}}}],["damages",{"_index":689,"title":{},"body":{"license.html":{}}}],["data",{"_index":231,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["database",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"controllers/CustomerController.html":{}}}],["date",{"_index":83,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"license.html":{}}}],["dd",{"_index":92,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{}}}],["default",{"_index":135,"title":{},"body":{"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["defend",{"_index":722,"title":{},"body":{"license.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"license.html":{}}}],["definition",{"_index":421,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":401,"title":{},"body":{"license.html":{}}}],["delete",{"_index":202,"title":{},"body":{"controllers/CustomerController.html":{}}}],["delete(':id",{"_index":191,"title":{},"body":{"controllers/CustomerController.html":{}}}],["deletes",{"_index":193,"title":{},"body":{"controllers/CustomerController.html":{}}}],["delgado",{"_index":104,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["deliberate",{"_index":684,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["derivative",{"_index":476,"title":{},"body":{"license.html":{}}}],["derived",{"_index":479,"title":{},"body":{"license.html":{}}}],["describing",{"_index":650,"title":{},"body":{"license.html":{}}}],["description",{"_index":88,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["designated",{"_index":520,"title":{},"body":{"license.html":{}}}],["determining",{"_index":671,"title":{},"body":{"license.html":{}}}],["development",{"_index":350,"title":{},"body":{"index.html":{}}}],["different",{"_index":624,"title":{},"body":{"license.html":{}}}],["direct",{"_index":424,"title":{},"body":{"license.html":{}}}],["direction",{"_index":427,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":654,"title":{},"body":{"license.html":{}}}],["discussing",{"_index":515,"title":{},"body":{"license.html":{}}}],["display",{"_index":542,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":545,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":606,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":400,"title":{},"body":{"license.html":{}}}],["document",{"_index":407,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":279,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["don't",{"_index":738,"title":{},"body":{"license.html":{}}}],["dto/create",{"_index":208,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["dto/update",{"_index":210,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["e2e",{"_index":361,"title":{},"body":{"index.html":{}}}],["each",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["easier",{"_index":745,"title":{},"body":{"license.html":{}}}],["editorial",{"_index":480,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":338,"title":{},"body":{"index.html":{}}}],["elaborations",{"_index":483,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":502,"title":{},"body":{"license.html":{}}}],["enclosed",{"_index":733,"title":{},"body":{"license.html":{}}}],["end",{"_index":728,"title":{},"body":{"license.html":{}}}],["entered",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"entities/Customer.html":{},"license.html":{},"overview.html":{}}}],["entities/customer.entity",{"_index":207,"title":{},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{}}}],["entity",{"_index":115,"title":{"entities/Customer.html":{}},"body":{"entities/Customer.html":{},"coverage.html":{},"license.html":{}}}],["entity{.ts,.js",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["even",{"_index":705,"title":{},"body":{"license.html":{}}}],["event",{"_index":680,"title":{},"body":{"license.html":{}}}],["example",{"_index":113,"title":{},"body":{"classes/CreateCustomerDto.html":{},"license.html":{}}}],["except",{"_index":547,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":517,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":534,"title":{},"body":{"license.html":{}}}],["executed",{"_index":638,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":678,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":443,"title":{},"body":{"license.html":{}}}],["exist",{"_index":186,"title":{},"body":{"controllers/CustomerController.html":{}}}],["explicitly",{"_index":629,"title":{},"body":{"license.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{}}}],["express",{"_index":300,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":143,"title":{},"body":{"entities/Customer.html":{},"classes/UpdateCustomerDto.html":{}}}],["failure",{"_index":701,"title":{},"body":{"license.html":{}}}],["false",{"_index":331,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fee",{"_index":710,"title":{},"body":{"license.html":{}}}],["fetches",{"_index":166,"title":{},"body":{"controllers/CustomerController.html":{}}}],["fields",{"_index":732,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":435,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{},"license.html":{}}}],["filed",{"_index":576,"title":{},"body":{"license.html":{}}}],["files",{"_index":455,"title":{},"body":{"license.html":{}}}],["findall",{"_index":149,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["findall(@query('page",{"_index":222,"title":{},"body":{"controllers/CustomerController.html":{}}}],["findall(page",{"_index":163,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["findbycpf",{"_index":150,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["findbycpf(@param('cpf",{"_index":227,"title":{},"body":{"controllers/CustomerController.html":{}}}],["findbycpf(cpf",{"_index":179,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["findone",{"_index":151,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["findone(@param('id",{"_index":225,"title":{},"body":{"controllers/CustomerController.html":{}}}],["findone(id",{"_index":187,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["fitness",{"_index":667,"title":{},"body":{"license.html":{}}}],["following",{"_index":582,"title":{},"body":{"license.html":{}}}],["form",{"_index":446,"title":{},"body":{"license.html":{}}}],["format",{"_index":93,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"license.html":{}}}],["found",{"_index":178,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["framework",{"_index":336,"title":{},"body":{"index.html":{}}}],["free",{"_index":537,"title":{},"body":{"license.html":{}}}],["function",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":318,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":462,"title":{},"body":{"license.html":{}}}],["get(':id",{"_index":188,"title":{},"body":{"controllers/CustomerController.html":{}}}],["get('cpf/:cpf",{"_index":180,"title":{},"body":{"controllers/CustomerController.html":{}}}],["getting",{"_index":332,"title":{"index.html":{},"license.html":{}},"body":{}}],["getwelcome",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["give",{"_index":583,"title":{},"body":{"license.html":{}}}],["goodwill",{"_index":698,"title":{},"body":{"license.html":{}}}],["governing",{"_index":753,"title":{},"body":{"license.html":{}}}],["grant",{"_index":527,"title":{},"body":{"license.html":{}}}],["granted",{"_index":445,"title":{},"body":{"license.html":{}}}],["granting",{"_index":412,"title":{},"body":{"license.html":{}}}],["grants",{"_index":530,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":685,"title":{},"body":{"license.html":{}}}],["grow",{"_index":368,"title":{},"body":{"index.html":{}}}],["harmless",{"_index":724,"title":{},"body":{"license.html":{}}}],["helper/helper",{"_index":213,"title":{},"body":{"controllers/CustomerController.html":{}}}],["here",{"_index":379,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":529,"title":{},"body":{"license.html":{}}}],["herein",{"_index":634,"title":{},"body":{"license.html":{}}}],["hold",{"_index":723,"title":{},"body":{"license.html":{}}}],["host",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["http://www.apache.org/licenses",{"_index":395,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":749,"title":{},"body":{"license.html":{}}}],["https://nestjs.com",{"_index":386,"title":{},"body":{"index.html":{}}}],["id",{"_index":118,"title":{},"body":{"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["identification",{"_index":100,"title":{},"body":{"classes/CreateCustomerDto.html":{},"license.html":{}}}],["identified",{"_index":182,"title":{},"body":{"controllers/CustomerController.html":{}}}],["identifier",{"_index":184,"title":{},"body":{"controllers/CustomerController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["identifying",{"_index":736,"title":{},"body":{"license.html":{}}}],["igma",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["ii",{"_index":433,"title":{},"body":{"license.html":{}}}],["iii",{"_index":440,"title":{},"body":{"license.html":{}}}],["implemented",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["implied",{"_index":663,"title":{},"body":{"license.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"license.html":{}}}],["imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{}}}],["improving",{"_index":516,"title":{},"body":{"license.html":{}}}],["inability",{"_index":696,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":691,"title":{},"body":{"license.html":{}}}],["include",{"_index":487,"title":{},"body":{"license.html":{}}}],["included",{"_index":471,"title":{},"body":{"license.html":{}}}],["includes",{"_index":600,"title":{},"body":{"license.html":{}}}],["including",{"_index":450,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":499,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":525,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":725,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":721,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":712,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["indicated",{"_index":469,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":425,"title":{},"body":{"license.html":{}}}],["individual",{"_index":442,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{}}}],["information",{"_index":737,"title":{},"body":{"license.html":{}}}],["informational",{"_index":614,"title":{},"body":{"license.html":{}}}],["informed",{"_index":183,"title":{},"body":{"controllers/CustomerController.html":{}}}],["infringed",{"_index":559,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":573,"title":{},"body":{"license.html":{}}}],["initialize",{"_index":217,"title":{},"body":{"controllers/CustomerController.html":{}}}],["injectable",{"_index":68,"title":{"injectables/AppService.html":{},"injectables/CustomerService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CustomerService.html":{},"coverage.html":{}}}],["injectables",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"injectables/CustomerService.html":{},"overview.html":{}}}],["injectrepository",{"_index":255,"title":{},"body":{"injectables/CustomerService.html":{}}}],["installation",{"_index":346,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":348,"title":{},"body":{"index.html":{}}}],["institute",{"_index":563,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":497,"title":{},"body":{"license.html":{}}}],["interfaces",{"_index":493,"title":{},"body":{"license.html":{}}}],["irrevocable",{"_index":538,"title":{},"body":{"license.html":{}}}],["isdatestring",{"_index":109,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["isnotempty",{"_index":107,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["isstring",{"_index":108,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["issue",{"_index":511,"title":{},"body":{"license.html":{}}}],["isvalidcpf",{"_index":212,"title":{},"body":{"controllers/CustomerController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isvalidcpf(cpf",{"_index":228,"title":{},"body":{"controllers/CustomerController.html":{},"miscellaneous/functions.html":{}}}],["january",{"_index":393,"title":{},"body":{"license.html":{}}}],["join",{"_index":375,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":383,"title":{},"body":{"index.html":{}}}],["kind",{"_index":662,"title":{},"body":{"license.html":{}}}],["language",{"_index":752,"title":{},"body":{"license.html":{}}}],["law",{"_index":657,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":569,"title":{},"body":{"license.html":{}}}],["legal",{"_index":413,"title":{},"body":{"license.html":{}}}],["length",{"_index":124,"title":{},"body":{"entities/Customer.html":{}}}],["liability",{"_index":679,"title":{},"body":{"license.html":{}}}],["liable",{"_index":688,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":557,"title":{},"body":{"license.html":{}}}],["license",{"_index":389,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":365,"title":{},"body":{"index.html":{},"license.html":{}}}],["licenses",{"_index":574,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":408,"title":{},"body":{"license.html":{}}}],["limit",{"_index":164,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["limitation",{"_index":664,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":754,"title":{},"body":{"license.html":{}}}],["limited",{"_index":451,"title":{},"body":{"license.html":{}}}],["link",{"_index":491,"title":{},"body":{"license.html":{}}}],["list",{"_index":175,"title":{},"body":{"controllers/CustomerController.html":{}}}],["lists",{"_index":509,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":564,"title":{},"body":{"license.html":{}}}],["loss",{"_index":697,"title":{},"body":{"license.html":{}}}],["losses",{"_index":704,"title":{},"body":{"license.html":{}}}],["made",{"_index":467,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":508,"title":{},"body":{"license.html":{}}}],["make",{"_index":550,"title":{},"body":{"license.html":{}}}],["making",{"_index":448,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":702,"title":{},"body":{"license.html":{}}}],["managed",{"_index":513,"title":{},"body":{"license.html":{}}}],["management",{"_index":428,"title":{},"body":{"license.html":{}}}],["marked",{"_index":519,"title":{},"body":{"license.html":{}}}],["marks",{"_index":645,"title":{},"body":{"license.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mean",{"_index":403,"title":{},"body":{"license.html":{}}}],["means",{"_index":422,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":458,"title":{},"body":{"license.html":{}}}],["media",{"_index":464,"title":{},"body":{"license.html":{}}}],["medium",{"_index":579,"title":{},"body":{"license.html":{}}}],["meet",{"_index":581,"title":{},"body":{"license.html":{}}}],["members",{"_index":219,"title":{},"body":{"controllers/CustomerController.html":{}}}],["merchantability",{"_index":666,"title":{},"body":{"license.html":{}}}],["merely",{"_index":490,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["miscellaneous",{"_index":317,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":364,"title":{},"body":{"index.html":{}}}],["mm",{"_index":91,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["mode",{"_index":354,"title":{},"body":{"index.html":{}}}],["modifications",{"_index":449,"title":{},"body":{"license.html":{}}}],["modified",{"_index":587,"title":{},"body":{"license.html":{}}}],["modify",{"_index":615,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":621,"title":{},"body":{"license.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/CustomerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":378,"title":{},"body":{"index.html":{},"license.html":{}}}],["myśliwiec",{"_index":384,"title":{},"body":{"index.html":{}}}],["name",{"_index":82,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["names",{"_index":643,"title":{},"body":{"license.html":{}}}],["necessarily",{"_index":558,"title":{},"body":{"license.html":{}}}],["negligence",{"_index":683,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":686,"title":{},"body":{"license.html":{}}}],["nest",{"_index":343,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":388,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":298,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":275,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":299,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":112,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"dependencies.html":{}}}],["new",{"_index":158,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"coverage.html":{}}}],["node.js",{"_index":335,"title":{},"body":{"index.html":{}}}],["non",{"_index":533,"title":{},"body":{"license.html":{}}}],["normally",{"_index":611,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":254,"title":{},"body":{"injectables/CustomerService.html":{}}}],["notfoundexception(`customer",{"_index":269,"title":{},"body":{"injectables/CustomerService.html":{}}}],["nothing",{"_index":633,"title":{},"body":{"license.html":{}}}],["notice",{"_index":470,"title":{},"body":{"license.html":{}}}],["notices",{"_index":590,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":631,"title":{},"body":{"license.html":{}}}],["npm",{"_index":347,"title":{},"body":{"index.html":{}}}],["number",{"_index":98,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":456,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":713,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":748,"title":{},"body":{"license.html":{}}}],["offer",{"_index":551,"title":{},"body":{"license.html":{}}}],["one",{"_index":604,"title":{},"body":{"license.html":{}}}],["open",{"_index":366,"title":{},"body":{"index.html":{}}}],["optional",{"_index":160,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":651,"title":{},"body":{"license.html":{}}}],["original",{"_index":486,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":432,"title":{},"body":{"license.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"license.html":{},"overview.html":{}}}],["outstanding",{"_index":438,"title":{},"body":{"license.html":{}}}],["overview",{"_index":758,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":410,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":434,"title":{},"body":{"license.html":{}}}],["package",{"_index":295,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":169,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"license.html":{}}}],["pagination",{"_index":171,"title":{},"body":{"controllers/CustomerController.html":{}}}],["param",{"_index":201,"title":{},"body":{"controllers/CustomerController.html":{}}}],["parameters",{"_index":159,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["parseint(process.env.db_port",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["part",{"_index":598,"title":{},"body":{"license.html":{}}}],["partialtype",{"_index":274,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["partialtype(createcustomerdto",{"_index":277,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["particular",{"_index":668,"title":{},"body":{"license.html":{}}}],["party",{"_index":610,"title":{},"body":{"license.html":{}}}],["password",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["patch",{"_index":200,"title":{},"body":{"controllers/CustomerController.html":{}}}],["patch(':id",{"_index":196,"title":{},"body":{"controllers/CustomerController.html":{}}}],["patent",{"_index":546,"title":{},"body":{"license.html":{}}}],["per",{"_index":174,"title":{},"body":{"controllers/CustomerController.html":{}}}],["percent",{"_index":436,"title":{},"body":{"license.html":{}}}],["perform",{"_index":543,"title":{},"body":{"license.html":{}}}],["permission",{"_index":641,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":444,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":531,"title":{},"body":{"license.html":{}}}],["person",{"_index":185,"title":{},"body":{"controllers/CustomerController.html":{},"miscellaneous/functions.html":{}}}],["pertain",{"_index":597,"title":{},"body":{"license.html":{}}}],["pg",{"_index":306,"title":{},"body":{"dependencies.html":{}}}],["places",{"_index":605,"title":{},"body":{"license.html":{}}}],["please",{"_index":376,"title":{},"body":{"index.html":{}}}],["port",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["possibility",{"_index":707,"title":{},"body":{"license.html":{}}}],["post",{"_index":155,"title":{},"body":{"controllers/CustomerController.html":{}}}],["postgres",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["power",{"_index":423,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":447,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":146,"title":{},"body":{"controllers/CustomerController.html":{}}}],["prepare",{"_index":540,"title":{},"body":{"license.html":{}}}],["primarygeneratedcolumn",{"_index":140,"title":{},"body":{"entities/Customer.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":128,"title":{},"body":{"entities/Customer.html":{}}}],["printed",{"_index":744,"title":{},"body":{"license.html":{}}}],["private",{"_index":257,"title":{},"body":{"injectables/CustomerService.html":{}}}],["process.env.db_database",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_host",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_password",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_synchronize",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.db_username",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["product",{"_index":646,"title":{},"body":{"license.html":{}}}],["production",{"_index":356,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":334,"title":{},"body":{"index.html":{}}}],["project",{"_index":367,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":589,"title":{},"body":{"license.html":{}}}],["promise",{"_index":161,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["properties",{"_index":79,"title":{"properties.html":{}},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"properties.html":{}}}],["provide",{"_index":623,"title":{},"body":{"license.html":{}}}],["provided",{"_index":473,"title":{},"body":{"license.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{}}}],["provides",{"_index":659,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":541,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":514,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":420,"title":{},"body":{"license.html":{}}}],["query",{"_index":203,"title":{},"body":{"controllers/CustomerController.html":{}}}],["query('limit",{"_index":223,"title":{},"body":{"controllers/CustomerController.html":{}}}],["read",{"_index":377,"title":{},"body":{"index.html":{}}}],["readable",{"_index":602,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["reason",{"_index":727,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":648,"title":{},"body":{"license.html":{}}}],["received",{"_index":523,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":584,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":742,"title":{},"body":{"license.html":{}}}],["record",{"_index":173,"title":{},"body":{"controllers/CustomerController.html":{}}}],["redistributing",{"_index":674,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":577,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["regarding",{"_index":639,"title":{},"body":{"license.html":{}}}],["register",{"_index":162,"title":{},"body":{"controllers/CustomerController.html":{}}}],["registers",{"_index":177,"title":{},"body":{"controllers/CustomerController.html":{}}}],["remain",{"_index":488,"title":{},"body":{"license.html":{}}}],["remove",{"_index":152,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["remove(@param('id",{"_index":236,"title":{},"body":{"controllers/CustomerController.html":{}}}],["remove(id",{"_index":190,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["replaced",{"_index":735,"title":{},"body":{"license.html":{}}}],["repository",{"_index":245,"title":{},"body":{"injectables/CustomerService.html":{},"index.html":{}}}],["represent",{"_index":484,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":507,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":539,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":652,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":399,"title":{},"body":{"license.html":{}}}],["required",{"_index":647,"title":{},"body":{"license.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"overview.html":{}}}],["responsibility",{"_index":719,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":670,"title":{},"body":{"license.html":{}}}],["result",{"_index":695,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":457,"title":{},"body":{"license.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["retain",{"_index":594,"title":{},"body":{"license.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["revisions",{"_index":481,"title":{},"body":{"license.html":{}}}],["rfb",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rights",{"_index":715,"title":{},"body":{"license.html":{}}}],["risks",{"_index":676,"title":{},"body":{"license.html":{}}}],["royalty",{"_index":536,"title":{},"body":{"license.html":{}}}],["rules",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":351,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":743,"title":{},"body":{"license.html":{}}}],["scalable",{"_index":339,"title":{},"body":{"index.html":{}}}],["section",{"_index":549,"title":{},"body":{"license.html":{}}}],["sections",{"_index":404,"title":{},"body":{"license.html":{}}}],["see",{"_index":750,"title":{},"body":{"license.html":{}}}],["sell",{"_index":552,"title":{},"body":{"license.html":{}}}],["sent",{"_index":506,"title":{},"body":{"license.html":{}}}],["separable",{"_index":489,"title":{},"body":{"license.html":{}}}],["separate",{"_index":636,"title":{},"body":{"license.html":{}}}],["server",{"_index":340,"title":{},"body":{"index.html":{}}}],["service",{"_index":644,"title":{},"body":{"license.html":{}}}],["shall",{"_index":402,"title":{},"body":{"license.html":{}}}],["shares",{"_index":439,"title":{},"body":{"license.html":{}}}],["side",{"_index":341,"title":{},"body":{"index.html":{}}}],["skip",{"_index":263,"title":{},"body":{"injectables/CustomerService.html":{}}}],["software",{"_index":452,"title":{},"body":{"license.html":{}}}],["sole",{"_index":718,"title":{},"body":{"license.html":{}}}],["solely",{"_index":669,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":690,"title":{},"body":{"license.html":{}}}],["specific",{"_index":751,"title":{},"body":{"license.html":{}}}],["sponsors",{"_index":370,"title":{},"body":{"index.html":{}}}],["src/.../helper.ts",{"_index":320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":70,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["src/customer/customer.controller.ts",{"_index":145,"title":{},"body":{"controllers/CustomerController.html":{},"coverage.html":{}}}],["src/customer/customer.controller.ts:24",{"_index":156,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:35",{"_index":165,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:45",{"_index":189,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:55",{"_index":181,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:68",{"_index":197,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:78",{"_index":192,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.module.ts",{"_index":240,"title":{},"body":{"modules/CustomerModule.html":{}}}],["src/customer/customer.service.ts",{"_index":243,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["src/customer/customer.service.ts:10",{"_index":246,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:14",{"_index":247,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:20",{"_index":248,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:28",{"_index":250,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:32",{"_index":249,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:41",{"_index":253,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:52",{"_index":251,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/dto/create",{"_index":77,"title":{},"body":{"classes/CreateCustomerDto.html":{},"coverage.html":{}}}],["src/customer/dto/update",{"_index":273,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["src/customer/entities/customer.entity.ts",{"_index":117,"title":{},"body":{"entities/Customer.html":{},"coverage.html":{}}}],["src/customer/entities/customer.entity.ts:12",{"_index":131,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:15",{"_index":127,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:18",{"_index":122,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:6",{"_index":129,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:9",{"_index":137,"title":{},"body":{"entities/Customer.html":{}}}],["src/helper/helper.ts",{"_index":287,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":291,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":352,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":355,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":357,"title":{},"body":{"index.html":{}}}],["started",{"_index":333,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":345,"title":{},"body":{"index.html":{}}}],["state",{"_index":630,"title":{},"body":{"license.html":{}}}],["stated",{"_index":548,"title":{},"body":{"license.html":{}}}],["statement",{"_index":622,"title":{},"body":{"license.html":{}}}],["statements",{"_index":280,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":591,"title":{},"body":{"license.html":{}}}],["stay",{"_index":380,"title":{},"body":{"index.html":{}}}],["stoppage",{"_index":699,"title":{},"body":{"license.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["string})@isdatestring()@isnotempty",{"_index":94,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["string})@isstring()@isnotempty",{"_index":101,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["subject",{"_index":528,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":544,"title":{},"body":{"license.html":{}}}],["submission",{"_index":626,"title":{},"body":{"license.html":{}}}],["submit",{"_index":500,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":498,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":524,"title":{},"body":{"license.html":{}}}],["such",{"_index":429,"title":{},"body":{"license.html":{}}}],["supersede",{"_index":635,"title":{},"body":{"license.html":{}}}],["support",{"_index":371,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{}}}],["svg",{"_index":756,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["syntax",{"_index":741,"title":{},"body":{"license.html":{}}}],["systems",{"_index":510,"title":{},"body":{"license.html":{}}}],["table",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":264,"title":{},"body":{"injectables/CustomerService.html":{}}}],["terminate",{"_index":575,"title":{},"body":{"license.html":{}}}],["terms",{"_index":396,"title":{},"body":{"license.html":{}}}],["test",{"_index":360,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":363,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":362,"title":{},"body":{"index.html":{}}}],["tests",{"_index":359,"title":{},"body":{"index.html":{}}}],["text",{"_index":601,"title":{},"body":{"license.html":{}}}],["thanks",{"_index":369,"title":{},"body":{"index.html":{}}}],["theory",{"_index":681,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":494,"title":{},"body":{"license.html":{}}}],["thiago",{"_index":103,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["third",{"_index":609,"title":{},"body":{"license.html":{}}}],["this.appservice.getwelcome",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.customerservice.create(createcustomerdto",{"_index":221,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findall(page",{"_index":224,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findbycpf(cpf",{"_index":233,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findone(id",{"_index":226,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.remove(id",{"_index":237,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.update(id",{"_index":235,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.findone(id",{"_index":271,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.create(createcustomerdto",{"_index":259,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.find",{"_index":266,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.findandcount",{"_index":262,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.findoneby({id",{"_index":265,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.preload",{"_index":270,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.remove(customer",{"_index":272,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.save(customer",{"_index":260,"title":{},"body":{"injectables/CustomerService.html":{}}}],["those",{"_index":555,"title":{},"body":{"license.html":{}}}],["through",{"_index":405,"title":{},"body":{"license.html":{}}}],["throw",{"_index":229,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["timestamptz",{"_index":134,"title":{},"body":{"entities/Customer.html":{}}}],["title",{"_index":665,"title":{},"body":{"license.html":{}}}],["tort",{"_index":682,"title":{},"body":{"license.html":{}}}],["total",{"_index":261,"title":{},"body":{"injectables/CustomerService.html":{}}}],["touch",{"_index":381,"title":{},"body":{"index.html":{}}}],["tracking",{"_index":512,"title":{},"body":{"license.html":{}}}],["trade",{"_index":642,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":595,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":640,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":553,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":459,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["translation",{"_index":460,"title":{},"body":{"license.html":{}}}],["true",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"entities/Customer.html":{},"miscellaneous/functions.html":{}}}],["twitter",{"_index":387,"title":{},"body":{"index.html":{}}}],["type",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeorm",{"_index":142,"title":{},"body":{"entities/Customer.html":{},"injectables/CustomerService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{}}}],["typeormmodule.forfeature([customer",{"_index":242,"title":{},"body":{"modules/CustomerModule.html":{}}}],["typeormmodule.forroot",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":276,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"dependencies.html":{},"license.html":{}}}],["typescript",{"_index":344,"title":{},"body":{"index.html":{}}}],["ui",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["under",{"_index":418,"title":{},"body":{"license.html":{}}}],["union",{"_index":414,"title":{},"body":{"license.html":{}}}],["unique",{"_index":126,"title":{},"body":{"entities/Customer.html":{},"controllers/CustomerController.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":358,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":252,"title":{},"body":{"injectables/CustomerService.html":{}}}],["unless",{"_index":628,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":761,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":204,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["unprocessableentityexception(`invalid",{"_index":230,"title":{},"body":{"controllers/CustomerController.html":{}}}],["update",{"_index":153,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["update(@param('id",{"_index":234,"title":{},"body":{"controllers/CustomerController.html":{}}}],["update(id",{"_index":194,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["updatecustomerdto",{"_index":195,"title":{"classes/UpdateCustomerDto.html":{}},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["updated_at",{"_index":133,"title":{},"body":{"entities/Customer.html":{}}}],["updatedat",{"_index":119,"title":{},"body":{"entities/Customer.html":{}}}],["updatedatecolumn",{"_index":141,"title":{},"body":{"entities/Customer.html":{}}}],["updatedatecolumn({name",{"_index":132,"title":{},"body":{"entities/Customer.html":{}}}],["updates",{"_index":198,"title":{},"body":{"controllers/CustomerController.html":{}}}],["use",{"_index":398,"title":{},"body":{"license.html":{}}}],["username",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":673,"title":{},"body":{"license.html":{}}}],["valid",{"_index":323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validator",{"_index":110,"title":{},"body":{"classes/CreateCustomerDto.html":{},"dependencies.html":{}}}],["value",{"_index":168,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["values",{"_index":218,"title":{},"body":{"controllers/CustomerController.html":{}}}],["varchar",{"_index":123,"title":{},"body":{"entities/Customer.html":{}}}],["verbal",{"_index":503,"title":{},"body":{"license.html":{}}}],["version",{"_index":391,"title":{},"body":{"license.html":{},"properties.html":{}}}],["warranties",{"_index":661,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":655,"title":{},"body":{"license.html":{}}}],["watch",{"_index":353,"title":{},"body":{"index.html":{}}}],["website",{"_index":385,"title":{},"body":{"index.html":{}}}],["wherever",{"_index":608,"title":{},"body":{"license.html":{}}}],["whether",{"_index":430,"title":{},"body":{"license.html":{}}}],["whole",{"_index":485,"title":{},"body":{"license.html":{}}}],["within",{"_index":526,"title":{},"body":{"license.html":{}}}],["without",{"_index":580,"title":{},"body":{"license.html":{}}}],["work",{"_index":465,"title":{},"body":{"license.html":{}}}],["works",{"_index":477,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":532,"title":{},"body":{"license.html":{}}}],["writing",{"_index":521,"title":{},"body":{"license.html":{}}}],["written",{"_index":504,"title":{},"body":{"license.html":{}}}],["you'd",{"_index":374,"title":{},"body":{"index.html":{}}}],["yyyy",{"_index":90,"title":{},"body":{"classes/CreateCustomerDto.html":{},"license.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/CustomerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getWelcome\n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getWelcome(): string {\n    return this.appService.getWelcome();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCustomerModule\n\nCustomerModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CustomerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CustomerModule } from './customer/customer.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    TypeOrmModule.forRoot({\n      type: 'postgres',\n      host: process.env.DB_HOST,\n      port: parseInt(process.env.DB_PORT),\n      username: process.env.DB_USERNAME,\n      password: process.env.DB_PASSWORD,\n      database: process.env.DB_DATABASE,\n      entities: [__dirname + '/**/*.entity{.ts,.js}'],\n      synchronize: (process.env.DB_SYNCHRONIZE === 'true'),\n    }),\n    CustomerModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\n\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWelcome\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getWelcome\n                        \n                    \n                \n            \n            \n                \ngetWelcome()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getWelcome(): string {\n    return 'Igma Challenge API';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCustomerDto.html":{"url":"classes/CreateCustomerDto.html","title":"class - CreateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/create-customer.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                cpf\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1998-04-20', description: 'Birth of date, in \"yyyy-MM-dd format.', type: String})@IsDateString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '498.967.060-42', description: 'Number of brazilian identification - CPF.', type: String})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Thiago Delgado', description: 'Customer's name.', type: String})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsDateString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCustomerDto {\n  @ApiProperty({ example: 'Thiago Delgado', description: 'Customer\\'s name.', type: String })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  @ApiProperty({ example: '498.967.060-42', description: 'Number of brazilian identification - CPF.', type: String })\n  @IsString()\n  @IsNotEmpty()\n  cpf: string;\n\n  @ApiProperty({ example: '1998-04-20', description: 'Birth of date, in \"yyyy-MM-dd format.', type: String  })\n  @IsDateString()\n  @IsNotEmpty()\n  birthDate: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Customer.html":{"url":"entities/Customer.html","title":"entity - Customer","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/entities/customer.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                cpf\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'birth_date', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'cpf', type: 'varchar', length: 11, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamptz', default: () => CURRENT_TIMESTAMP})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, PrimaryGeneratedColumn, UpdateDateColumn } from \"typeorm\";\n\n@Entity()\nexport class Customer extends BaseEntity {\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamptz', default: () => 'CURRENT_TIMESTAMP' })\n  updatedAt: Date;\n\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  @Column({ name: 'cpf', type: 'varchar', length: 11, unique: true })\n  cpf: string;\n\n  @Column({ name: 'birth_date', type: 'date' })\n  birthDate: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomerController.html":{"url":"controllers/CustomerController.html","title":"controller - CustomerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                customer\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCpf\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCustomerDto: CreateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:24\n                \n            \n\n\n            \n                \n                    Creates a new customer in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCustomerDto\n                                    \n                                                CreateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise with the customer register\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(page: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:35\n                \n            \n\n\n            \n                \n                    Fetches the customers from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        Page number in pagination\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                    \n                                        Record number per page in pagination\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise with the list of customers and the amount of registers found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCpf\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCpf(cpf: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('cpf/:cpf')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:55\n                \n            \n\n\n            \n                \n                    Fetches the list of customers from the database, identified by cpf informed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An identifier of a brazilian person. A customer with this cpf should exist in the database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise with the list of customers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:45\n                \n            \n\n\n            \n                \n                    Fetches the unique customer from the database, identified by id informed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An identifier of a customer. A customer with this id should exist in the database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise with the customer register\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:78\n                \n            \n\n\n            \n                \n                    Deletes a customer from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An identifier of a customer. A customer with this id should exist in the database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise with the customer register\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:68\n                \n            \n\n\n            \n                \n                    Updates the customer in the database, identified by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An identifier of a customer. A customer with this id should exist in the database\n\n                                    \n                                \n                                \n                                    updateCustomerDto\n                                    \n                                                UpdateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise with the customer register\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query, UnprocessableEntityException } from '@nestjs/common';\nimport { CustomerService } from './customer.service';\nimport { Customer } from './entities/customer.entity';\nimport { CreateCustomerDto } from './dto/create-customer.dto';\nimport { UpdateCustomerDto } from './dto/update-customer.dto';\nimport { ApiProperty, ApiTags } from '@nestjs/swagger';\nimport { IsValidCpf} from '../helper/helper';\n\n@ApiTags('customer')\n@Controller('customer')\nexport class CustomerController {\n  /**\n   * Constructor, initialize values of members in class\n   * @param CustomerService\n   */  \n  constructor(private readonly customerService: CustomerService) {}\n\n  /**\n   * Creates a new customer in the database\n   * @param CreateCustomerDto\n   * @returns A promise with the customer register\n   */\n  @Post()\n  create(@Body() createCustomerDto: CreateCustomerDto): Promise {\n    return this.customerService.create(createCustomerDto);\n  }\n\n  /**\n   * Fetches the customers from the database\n   * @param page Page number in pagination\n   * @param limit Record number per page in pagination\n   * @returns A promise with the list of customers and the amount of registers found\n   */\n  @Get()\n  async findAll(@Query('page') page: number = 1, @Query('limit') limit: number = 10): Promise {\n    return this.customerService.findAll(page, limit);\n  }\n\n  /**\n   * Fetches the unique customer from the database, identified by id informed\n   * @param id An identifier of a customer. A customer with this id should exist in the database\n   * @returns A promise with the customer register\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string): Promise {\n    return this.customerService.findOne(id);\n  }\n\n  /**\n   * Fetches the list of customers from the database, identified by cpf informed\n   * @param cpf An identifier of a brazilian person. A customer with this cpf should exist in the database\n   * @returns A promise with the list of customers\n   */\n  @Get('cpf/:cpf')\n  async findByCpf(@Param('cpf') cpf: string): Promise {\n    if (!IsValidCpf(cpf)) {\n      throw new UnprocessableEntityException(`Invalid CPF data or format: '${cpf}'.`);\n    }\n    return await this.customerService.findByCpf(cpf);\n  }  \n\n  /**\n   * Updates the customer in the database, identified by id\n   * @param id An identifier of a customer. A customer with this id should exist in the database\n   * @returns A promise with the customer register\n   */\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCustomerDto: UpdateCustomerDto): Promise {\n    return this.customerService.update(id, updateCustomerDto);\n  }\n\n  /**\n   * Deletes a customer from the database\n   * @param id An identifier of a customer. A customer with this id should exist in the database\n   * @returns A promise with the customer register \n   */\n  @Delete(':id')\n  remove(@Param('id') id: string): Promise {\n    return this.customerService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomerModule.html":{"url":"modules/CustomerModule.html","title":"module - CustomerModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_providers\n\n\n\n\nCustomerService\n\nCustomerService\n\n\n\nCustomerModule\n\nCustomerModule\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/customer/customer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Customer } from './entities/customer.entity';\nimport { CustomerService } from './customer.service';\nimport { CustomerController } from './customer.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Customer])],\n  controllers: [CustomerController],\n  providers: [CustomerService]\n})\nexport class CustomerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCpf\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/customer/customer.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCustomerDto: CreateCustomerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCustomerDto\n                                    \n                                                CreateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCpf\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCpf(cpf: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCustomerDto\n                                    \n                                                UpdateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnprocessableEntityException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { CreateCustomerDto } from './dto/create-customer.dto';\nimport { UpdateCustomerDto } from './dto/update-customer.dto';\nimport { Customer } from './entities/customer.entity';\nimport { ApiProperty } from '@nestjs/swagger';\n\n@Injectable()\nexport class CustomerService {\n\n  constructor(@InjectRepository(Customer) private readonly repository: Repository) { }\n\n  create(createCustomerDto: CreateCustomerDto): Promise  {\n    const customer = this.repository.create(createCustomerDto);\n\n    return this.repository.save(customer);\n  }\n\n  async findAll(page: number = 1, limit: number = 10): Promise {\n    const [data, total] = await this.repository.findAndCount({\n      skip: (page - 1) * limit,\n      take: limit,\n    });\n    return { data, total };\n  }\n\n  findOne(id: string): Promise {\n    return this.repository.findOneBy({id: id});\n  }\n\n  async findByCpf(cpf: string): Promise {\n    const customers = this.repository.find({ where: { cpf: cpf } });\n    if ((await customers).length === 0) {\n      throw new NotFoundException(`Customer with CPF like '${cpf}' not found.`);\n    }\n\n    return customers;\n  }\n\n  async update(id: string, updateCustomerDto: UpdateCustomerDto): Promise {\n    const customer  = await this.repository.preload({\n      id: id,\n      ...updateCustomerDto,\n    });\n    if (!customer) {\n      throw new NotFoundException(`Customer #${id} not found.`);\n    }\n    return this.repository.save(customer);\n  }\n\n  async remove(id: string) {\n    const customer = await this.findOne(id);\n    return this.repository.remove(customer);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCustomerDto.html":{"url":"classes/UpdateCustomerDto.html","title":"class - UpdateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/update-customer.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCustomerDto } from './create-customer.dto';\n\nexport class UpdateCustomerDto extends PartialType(CreateCustomerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/customer/customer.controller.ts\n            \n            controller\n            CustomerController\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/customer/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/customer/dto/create-customer.dto.ts\n            \n            class\n            CreateCustomerDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/customer/dto/update-customer.dto.ts\n            \n            class\n            UpdateCustomerDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/customer/entities/customer.entity.ts\n            \n            entity\n            Customer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/helper/helper.ts\n            \n            function\n            IsValidCpf\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            pg : ^8.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IsValidCpf   (src/.../helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/helper/helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsValidCpf\n                        \n                    \n                \n            \n            \n                \nIsValidCpf(cpf: string)\n                \n            \n\n\n\n\n            \n                \n                    Checks if the CPF entered is a valid number, according to the rules implemented by the RFB\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A identifier of a brazilian citizen. This number is unique for each brazilian person.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean True or false\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CustomerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_providers\n\n\n\n\nCustomerModule\n\nCustomerModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCustomerModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCustomerService\n\nCustomerService\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
