var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/CreateCustomerDto.html",[0,0.486,1,1.105]],["body/classes/CreateCustomerDto.html",[0,0.718,1,1.633,2,1.441,3,1.059,4,0.78,5,0.664,6,3.396,7,1.703,8,1.023,9,2.312,10,1.958,11,2.788,12,1.674,13,1.958,14,2.312,15,1.059,16,1.958,17,3.396,18,2.289,19,1.967,20,1.994,21,0.06,22,3.038,23,2.626,24,3.985,25,3.509,26,3.509,27,3.509,28,3.396,29,2.788,30,3.509,31,3.509,32,1.958,33,2.584,34,1.901,35,2.584,36,3.107,37,2.25,38,3.509,39,3.509,40,1.958,41,2.039,42,2.788,43,3.509,44,2.584,45,3.509,46,1.958,47,2.788,48,3.509,49,2.584,50,1.236,51,4.274,52,3.985,53,3.509,54,2.052,55,3.396,56,1.703,57,1.059,58,3.985,59,3.165,60,2.584,61,0.04,62,0.04]],["title/entities/Customer.html",[63,1.503,64,0.949]],["body/entities/Customer.html",[0,0.426,3,0.968,4,0.713,5,0.607,8,0.512,15,0.968,16,1.84,17,3.02,18,2.196,19,2.02,20,2.071,21,0.06,22,3.293,23,2.955,28,2.62,34,2.14,37,2.14,41,1.574,46,1.84,50,0.832,57,0.968,61,0.037,62,0.037,63,2.295,64,1.78,65,1.556,66,1.876,67,3.298,68,3.298,69,3.801,70,2.505,71,3.801,72,3.801,73,3.298,74,2.362,75,4.114,76,4.114,77,3.298,78,2.711,79,2.62,80,2.362,81,3.298,82,2.362,83,3.298,84,4.114,85,2.711,86,4.114,87,2.362,88,2.62,89,3.298,90,2.362,91,1.84,92,3.298,93,2.362,94,2.362,95,3.298,96,2.362,97,3.298,98,2.62,99,3.298,100,4.114,101,2.362,102,3.298,103,3.298,104,2.362,105,1.556,106,1.876]],["title/controllers/CustomerController.html",[107,1.503,108,1.503]],["body/controllers/CustomerController.html",[0,0.529,1,1.694,3,0.625,4,0.46,5,0.392,8,0.866,12,1.823,13,2.305,14,1.571,15,0.625,18,2.146,19,1.566,20,1.566,21,0.06,23,2.518,32,1.33,34,1.823,36,2.188,37,2.146,40,2.423,41,1.138,50,1.407,55,1.211,56,1.005,57,0.625,61,0.027,62,0.027,64,1.786,70,3.171,78,1.571,85,1.005,91,2.305,107,1.638,108,1.33,109,1.211,110,1.211,111,1.525,112,2.638,113,2.384,114,1.852,115,3.035,116,1.894,117,1.894,118,1.894,119,1.894,120,1.894,121,1.211,122,1.525,123,1.525,124,1.525,125,1.894,126,4.841,127,2.518,128,2.518,129,2.964,130,3.921,131,4.132,132,1.211,133,2.863,134,1.525,135,3.821,136,1.211,137,2.631,138,1.138,139,3.321,140,1.894,141,1.894,142,1.894,143,3.821,144,2.384,145,2.384,146,1.571,147,1.211,148,2.384,149,1.525,150,3.821,151,2.638,152,1.894,153,4.132,154,1.211,155,2.384,156,1.525,157,1.211,158,2.384,159,1.525,160,1.894,161,1.211,162,1.971,163,2.384,164,1.525,165,1.894,166,2.384,167,2.384,168,1.525,169,3.374,170,1.211,171,1.525,172,1.211,173,1.525,174,1.525,175,0.851,176,1.361,177,1.211,178,1.005,179,1.211,180,1.571,181,1.211,182,2.384,183,1.525,184,0.851,185,1.525,186,1.525,187,1.525,188,1.211,189,1.211,190,1.211,191,1.211,192,1.525,193,1.211,194,1.525,195,1.525,196,3.035,197,1.525,198,1.525,199,1.525,200,1.525,201,1.525,202,1.525,203,1.525,204,1.571,205,1.894,206,1.894,207,1.894,208,1.211,209,1.525,210,1.525,211,1.211,212,2.384,213,1.211,214,1.525,215,1.525,216,1.525]],["title/modules/CustomerModule.html",[217,1.776,218,1.503]],["body/modules/CustomerModule.html",[0,0.624,3,1.418,4,1.045,5,0.89,21,0.06,50,1.726,57,1.418,61,0.048,62,0.048,64,1.219,108,2.556,109,3.367,175,1.93,176,2.043,177,2.749,178,2.28,217,2.793,218,2.781,219,2.28,220,2.364,221,2.749,222,2.749,223,3.367,224,2.749,225,1.93,226,3.46,227,4.238,228,3.46,229,2.28,230,3.46,231,3.46,232,3.46]],["title/injectables/CustomerService.html",[176,1.105,233,1.503]],["body/injectables/CustomerService.html",[0,0.563,1,1.567,3,0.559,4,0.412,5,0.351,8,0.862,12,1.824,13,2.032,15,0.559,18,2.318,19,1.629,20,1.629,21,0.061,32,0.761,34,1.896,36,2.4,37,2.173,40,2.54,41,1.042,46,1.218,50,1.347,57,0.559,61,0.025,62,0.025,64,1.794,70,3.151,85,0.899,88,1.735,98,2.479,105,0.899,112,1.735,114,1.741,115,3.618,116,1.735,117,1.735,118,1.735,119,1.735,120,2.479,121,1.735,125,1.735,127,2.618,128,2.618,129,2.966,130,3.339,132,1.735,133,2.893,136,1.084,137,2.52,138,1.303,140,1.735,142,1.735,146,2.52,147,1.735,151,1.735,154,1.735,157,1.735,160,1.735,161,1.735,162,1.955,165,1.735,169,3.339,170,1.735,172,1.735,175,0.761,176,0.895,178,0.899,179,1.084,180,1.439,181,1.084,184,0.761,188,2.169,189,1.735,190,1.735,191,1.735,193,1.084,196,3.038,204,0.899,205,2.712,206,1.084,207,3.255,208,2.712,211,3.038,213,1.084,229,0.899,233,1.218,234,1.364,235,1.084,236,1.735,237,1.735,238,2.183,239,2.183,240,1.364,241,3.038,242,1.364,243,1.364,244,3.12,245,3.12,246,2.183,247,1.364,248,3.641,249,3.12,250,3.12,251,2.183,252,3.641,253,1.364,254,1.364,255,1.364,256,2.479,257,1.364,258,2.183,259,1.364,260,2.183,261,1.364,262,2.479,263,2.169,264,2.479,265,3.413,266,1.364,267,1.364,268,1.364,269,1.364,270,3.413,271,1.364,272,1.364,273,3.12,274,1.364,275,1.735,276,2.183,277,0.899,278,2.183,279,1.364,280,1.364,281,1.364,282,2.183,283,2.183,284,1.364,285,1.364,286,1.084,287,1.364,288,1.364,289,1.364,290,1.364,291,2.73,292,1.364,293,1.364,294,1.364]],["title/classes/UpdateCustomerDto.html",[0,0.486,162,1.286]],["body/classes/UpdateCustomerDto.html",[0,0.788,1,1.791,2,2.029,3,1.491,4,1.098,5,0.935,7,2.397,8,0.789,9,2.879,10,2.437,11,3.47,13,2.437,14,2.879,21,0.059,50,1.539,57,1.491,61,0.05,62,0.05,106,2.89,114,2.029,162,2.084,180,2.397,295,2.89,296,4.368,297,3.637,298,2.89,299,2.029,300,3.637]],["title/changelog.html",[301,1.09,302,1.09,303,2.285]],["body/changelog.html",[21,0.05,47,3.522,61,0.05,62,0.05,138,1.779,304,4.731,305,3.728,306,3.728,307,3.728,308,3.759,309,3.728,310,1.779,311,2.457,312,2.962,313,4.433,314,3.728,315,4.433,316,4.433,317,4.433,318,2.962,319,3.728,320,3.728,321,3.728,322,3.728,323,3.522,324,2.962,325,3.728,326,2.962]],["title/contributing.html",[301,1.09,302,1.09,327,1.815]],["body/contributing.html",[8,0.3,10,1.918,12,1.054,21,0.036,61,0.025,62,0.025,64,1.108,114,0.772,141,1.099,146,0.912,225,1.918,256,2.499,275,2.499,277,0.912,286,1.099,299,0.772,310,1.64,326,1.754,327,2.189,328,3.146,329,3.146,330,3.146,331,3.146,332,1.099,333,1.384,334,2.208,335,3.438,336,1.754,337,1.384,338,1.384,339,2.731,340,1.754,341,1.754,342,1.099,343,2.208,344,3.438,345,2.208,346,3.629,347,1.384,348,2.499,349,3.173,350,3.665,351,2.499,352,2.756,353,2.499,354,3.146,355,1.099,356,2.189,357,1.384,358,1.099,359,2.208,360,1.384,361,1.384,362,1.384,363,2.756,364,1.384,365,1.384,366,1.099,367,1.384,368,1.384,369,1.384,370,1.232,371,1.384,372,1.384,373,1.384,374,1.384,375,1.384,376,1.384,377,1.384,378,2.208,379,1.099,380,1.384,381,1.384,382,1.384,383,2.208,384,1.384,385,3.055,386,2.756,387,3.665,388,3.846,389,2.208,390,3.665,391,2.208,392,2.208,393,1.754,394,2.208,395,2.208,396,1.754,397,3.665,398,1.384,399,2.208,400,1.384,401,2.208,402,1.384,403,3.846,404,1.384,405,3.438,406,2.208,407,3.665,408,1.099,409,1.099,410,1.384,411,3.146,412,3.146,413,2.756,414,1.384,415,3.808,416,2.208,417,2.756,418,2.208,419,1.384,420,1.384,421,2.208,422,1.384,423,1.384,424,1.099,425,2.189,426,1.754,427,2.731,428,2.208,429,2.208,430,2.208,431,1.384,432,2.208,433,2.208,434,1.099,435,1.099,436,1.384,437,2.208,438,2.208,439,1.384,440,1.384,441,3.146,442,1.099,443,1.099,444,1.099,445,1.384,446,1.099,447,2.189,448,1.384,449,1.099,450,1.754,451,1.099,452,0.66,453,2.756,454,4.455,455,3.146,456,1.384,457,1.384,458,1.384,459,1.384,460,1.384,461,2.208,462,0.912,463,1.384,464,1.384,465,2.208,466,2.208,467,2.756,468,1.384,469,1.384,470,3.665,471,1.384,472,2.208,473,1.384,474,1.384,475,1.816,476,2.208,477,2.073,478,1.384,479,1.384,480,2.208,481,1.099,482,1.384,483,1.384,484,2.208,485,1.384,486,1.384,487,2.208,488,3.438,489,1.384,490,1.384,491,2.208,492,1.384,493,2.208,494,2.189,495,2.208,496,1.384,497,1.384,498,2.189,499,1.384,500,1.384,501,1.384,502,1.384,503,2.208,504,2.208,505,2.208,506,1.384,507,1.384,508,1.384,509,1.384,510,1.384,511,1.384,512,0.912,513,1.384,514,2.208,515,1.384,516,1.384,517,1.384,518,2.731,519,1.384,520,1.754,521,1.384,522,1.384,523,2.756,524,1.384,525,2.208,526,1.384,527,1.384,528,2.756,529,1.099,530,1.384,531,2.189,532,1.384,533,1.384,534,1.099,535,1.384,536,3.146,537,1.754,538,1.384,539,2.208,540,2.756,541,1.384,542,1.384,543,1.754,544,2.208,545,1.384,546,1.384,547,1.384,548,1.099,549,1.384,550,1.384,551,1.384,552,1.384,553,1.099,554,1.384,555,1.384,556,1.384,557,2.208,558,1.099,559,1.384,560,1.384,561,1.384,562,1.384,563,1.384,564,1.099,565,1.384,566,2.756,567,2.208,568,1.384,569,1.384,570,1.384,571,1.384,572,1.099,573,1.384,574,1.384,575,1.099,576,1.384,577,1.384,578,1.099,579,1.384,580,1.099,581,3.846,582,3.438,583,1.384,584,2.208,585,1.384,586,1.384,587,2.208,588,1.384,589,1.384,590,2.756,591,2.208,592,1.384,593,1.384,594,1.099,595,1.099,596,1.099,597,2.208,598,1.754,599,1.099,600,1.384,601,1.099,602,1.384,603,1.384,604,1.384,605,1.384,606,1.384,607,1.384,608,1.384,609,1.384,610,1.384,611,1.384,612,1.384,613,2.208,614,1.384,615,1.384,616,1.384,617,1.384,618,1.384,619,1.384,620,0.912,621,1.384,622,1.384,623,1.384,624,1.099,625,1.384,626,1.099,627,1.384,628,2.208,629,1.384,630,1.384,631,1.384,632,1.099,633,1.099,634,1.384,635,1.384,636,2.208,637,1.384,638,1.099,639,2.756,640,1.384,641,1.384,642,1.384,643,1.384,644,1.099,645,1.384,646,1.099,647,1.384]],["title/coverage.html",[648,2.379]],["body/coverage.html",[0,0.776,1,1.456,5,0.913,6,2.821,7,2.837,12,1.694,20,1.456,21,0.058,61,0.049,62,0.049,63,1.981,64,1.251,66,2.821,91,1.981,107,1.981,108,1.981,110,2.821,162,1.694,176,1.456,184,1.981,233,1.981,235,2.821,295,2.821,310,1.694,311,2.34,340,2.821,446,4.032,648,2.34,649,3.551,650,3.551,651,3.551,652,3.551,653,4.817,654,2.821,655,4.305,656,2.821,657,3.551]],["title/dependencies.html",[220,1.798,512,1.506]],["body/dependencies.html",[0,0.765,21,0.06,54,2.756,56,2.286,61,0.048,62,0.048,105,2.797,175,1.935,220,1.935,229,2.286,298,2.756,299,1.935,658,3.469,659,3.469,660,3.469,661,3.469,662,4.244,663,4.586,664,3.469,665,3.469,666,3.469,667,3.469,668,3.372,669,3.469,670,3.469,671,3.469,672,3.469,673,3.469,674,3.469,675,3.469,676,3.469,677,3.469,678,3.469,679,3.469,680,3.469,681,3.469,682,3.469,683,3.469,684,3.469,685,3.469,686,2.286]],["title/miscellaneous/functions.html",[687,1.815,688,2.124]],["body/miscellaneous/functions.html",[8,0.781,15,1.475,18,2.071,19,1.475,20,1.475,21,0.055,37,2.071,40,2.421,41,2.071,61,0.049,62,0.049,78,2.371,79,2.859,91,2.008,127,2.371,128,2.371,129,2.371,152,2.859,184,2.421,204,2.371,262,2.859,263,2.859,264,3.448,308,2.859,311,3.071,578,2.859,654,2.859,656,2.859,687,2.859,688,2.371,689,3.598,690,3.598,691,3.598,692,3.598,693,2.859,694,3.598,695,3.598,696,3.598,697,3.598,698,2.859,699,3.598]],["title/index.html",[15,0.936,301,1.09,302,1.09]],["body/index.html",[4,0.972,8,0.698,21,0.059,61,0.046,62,0.046,241,2.558,324,2.558,332,2.558,346,2.558,348,2.558,351,2.558,370,1.796,396,2.558,426,2.558,435,3.949,452,1.536,462,2.122,481,2.558,534,3.89,553,3.22,648,2.122,686,2.671,693,2.558,700,3.22,701,3.22,702,4.053,703,3.22,704,3.22,705,3.22,706,3.22,707,4.435,708,3.22,709,3.22,710,3.22,711,3.22,712,3.22,713,3.22,714,3.22,715,4.053,716,3.22,717,3.22,718,3.22,719,2.558,720,3.22,721,3.22,722,3.22,723,4.053,724,3.22,725,3.22,726,3.22,727,3.22,728,3.22,729,3.22,730,3.22,731,3.22,732,3.22,733,2.558,734,3.22,735,3.22,736,3.22,737,3.22,738,3.22,739,3.22]],["title/license.html",[301,1.09,302,1.09,452,1.09]],["body/license.html",[0,0.198,4,1.241,5,0.94,8,0.239,9,1.208,10,0.614,19,0.965,21,0.027,22,0.726,29,0.875,32,0.614,34,0.525,42,0.875,46,0.614,50,0.388,59,0.875,61,0.021,62,0.021,63,2.184,65,0.726,137,0.726,138,0.525,225,0.614,236,0.875,237,0.875,277,0.726,299,0.614,310,1.123,336,1.87,339,0.875,341,0.875,342,0.875,349,0.875,353,0.875,355,0.875,356,2.422,358,0.875,366,0.875,370,0.614,385,1.87,393,0.875,408,0.875,409,0.875,415,0.875,424,0.875,425,1.87,427,0.875,442,2.422,443,3.015,444,0.875,447,0.875,449,0.875,450,2.422,451,3.015,452,2.336,462,0.726,475,0.726,477,1.552,494,3.015,518,1.456,520,0.875,529,0.875,531,3.11,537,2.181,543,2.181,548,0.875,558,0.875,564,1.87,572,0.875,575,3.559,580,0.875,594,1.87,595,0.875,596,0.875,598,1.456,599,0.875,601,0.875,620,1.809,626,0.875,632,3.889,633,1.87,638,2.181,644,2.181,646,0.875,668,1.456,698,2.181,724,0.875,740,2.745,741,2.354,742,1.101,743,1.101,744,1.101,745,3.795,746,4.189,747,3.049,748,1.101,749,4.324,750,3.914,751,1.101,752,1.101,753,3.914,754,4.189,755,3.291,756,1.833,757,1.101,758,1.101,759,1.101,760,2.745,761,1.101,762,1.101,763,2.745,764,1.833,765,1.101,766,2.354,767,1.833,768,1.833,769,1.101,770,1.101,771,1.833,772,3.291,773,1.101,774,1.833,775,1.101,776,1.101,777,1.101,778,1.101,779,1.101,780,1.101,781,1.101,782,1.101,783,2.354,784,1.833,785,4.189,786,1.101,787,3.291,788,2.745,789,1.833,790,2.354,791,3.291,792,1.101,793,1.101,794,1.101,795,1.101,796,1.101,797,1.833,798,1.101,799,1.101,800,2.354,801,1.833,802,1.101,803,1.833,804,1.101,805,1.833,806,1.101,807,4.48,808,4.523,809,1.101,810,1.101,811,1.101,812,1.101,813,1.101,814,1.101,815,1.833,816,1.833,817,1.101,818,1.101,819,1.101,820,1.101,821,1.101,822,1.101,823,2.745,824,1.101,825,1.833,826,2.745,827,1.833,828,3.049,829,1.833,830,1.101,831,1.101,832,2.354,833,1.101,834,1.101,835,1.101,836,1.833,837,1.101,838,1.101,839,2.354,840,1.101,841,2.354,842,1.101,843,1.101,844,3.914,845,1.101,846,1.101,847,1.833,848,3.655,849,2.354,850,1.833,851,1.833,852,1.833,853,1.833,854,1.833,855,2.354,856,1.833,857,2.354,858,1.833,859,1.833,860,1.833,861,1.101,862,1.833,863,1.833,864,1.101,865,3.049,866,3.49,867,2.354,868,1.833,869,1.833,870,1.833,871,1.101,872,1.101,873,1.833,874,1.101,875,1.101,876,1.101,877,2.354,878,1.101,879,1.101,880,1.101,881,1.833,882,1.833,883,1.101,884,1.101,885,1.101,886,1.101,887,1.101,888,1.101,889,1.101,890,1.833,891,1.101,892,1.101,893,1.101,894,1.101,895,1.101,896,3.049,897,1.101,898,1.101,899,1.101,900,2.354,901,1.101,902,1.101,903,1.101,904,1.101,905,3.655,906,1.101,907,1.101,908,1.101,909,1.101,910,1.101,911,1.833,912,1.101,913,2.745,914,1.101,915,1.101,916,1.101,917,2.354,918,1.101,919,1.101,920,1.833,921,1.833,922,1.101,923,1.101,924,1.101,925,1.833,926,1.101,927,1.101,928,3.049,929,1.101,930,1.101,931,1.101,932,1.101,933,1.101,934,2.745,935,1.101,936,1.101,937,1.101,938,1.101,939,1.101,940,1.101,941,1.101,942,1.101,943,1.101,944,1.101,945,1.101,946,1.833,947,1.101,948,1.101,949,1.833,950,1.101,951,1.101,952,2.745,953,1.101,954,1.101,955,1.101,956,1.101,957,1.101,958,1.101,959,2.745,960,2.354,961,2.354,962,2.354,963,1.833,964,1.833,965,2.354,966,1.833,967,1.833,968,1.833,969,1.101,970,1.101,971,1.101,972,1.101,973,1.101,974,1.101,975,1.833,976,1.101,977,1.101,978,1.101,979,3.049,980,1.101,981,1.101,982,1.101,983,1.101,984,1.101,985,1.101,986,1.101,987,1.101,988,1.101,989,3.049,990,1.101,991,1.101,992,1.101,993,1.101,994,1.101,995,1.101,996,1.101,997,1.101,998,1.101,999,1.101,1000,1.101,1001,1.101,1002,1.101,1003,1.101,1004,1.101,1005,1.101,1006,1.101,1007,1.101,1008,2.354,1009,1.101,1010,1.101,1011,1.101,1012,1.101,1013,1.833,1014,1.101,1015,1.101,1016,1.101,1017,1.101,1018,1.101,1019,1.101,1020,1.101,1021,1.101,1022,1.101,1023,1.101,1024,1.101,1025,1.101,1026,1.101,1027,1.833,1028,1.101,1029,1.101,1030,1.101,1031,1.833,1032,1.833,1033,1.101,1034,1.101,1035,1.101,1036,1.101,1037,1.101,1038,1.101,1039,1.101,1040,1.101,1041,1.101,1042,1.101,1043,1.101,1044,1.101,1045,1.101]],["title/modules.html",[219,2.379]],["body/modules.html",[21,0.053,61,0.053,62,0.053,218,2.261,219,2.671,370,2.261,1046,4.053,1047,4.053,1048,4.053]],["title/overview.html",[1049,2.868]],["body/overview.html",[2,2.127,21,0.054,61,0.051,62,0.051,65,2.512,107,2.127,138,2.353,176,1.958,217,2.512,218,2.751,220,2.506,221,3.029,222,3.029,223,3.569,224,3.029,225,2.127,233,2.127,318,3.029,1049,3.029]],["title/properties.html",[16,1.798,512,1.506]],["body/properties.html",[8,0.866,16,2.228,21,0.058,61,0.052,62,0.052,452,1.905,477,2.632,733,3.172,1050,3.993,1051,3.993]],["title/todo.html",[301,1.09,302,1.09,1052,2.285]],["body/todo.html",[2,2.139,5,0.986,21,0.051,61,0.051,62,0.051,310,1.829,312,3.046,323,3.046,379,3.046,434,3.046,475,2.527,498,3.046,620,2.527,624,3.046,686,2.527,688,2.527,719,3.046,1053,4.507,1054,4.507,1055,3.834,1056,3.834,1057,3.834,1058,3.834,1059,3.834,1060,3.834,1061,3.834]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{}}}],["0",{"_index":290,"title":{},"body":{"injectables/CustomerService.html":{}}}],["0.0.1",{"_index":1050,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":660,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["0.3.12",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":672,"title":{},"body":{"dependencies.html":{}}}],["02",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":309,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":26,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["1",{"_index":138,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"changelog.html":{},"license.html":{},"overview.html":{}}}],["1/1",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":140,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["100",{"_index":446,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["11",{"_index":77,"title":{},"body":{"entities/Customer.html":{}}}],["1998",{"_index":25,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["2",{"_index":318,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.0",{"_index":741,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":662,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":665,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":27,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["2004",{"_index":743,"title":{},"body":{"license.html":{}}}],["255",{"_index":92,"title":{},"body":{"entities/Customer.html":{}}}],["4.6.2",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":39,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["498.967.060",{"_index":38,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["50",{"_index":777,"title":{},"body":{"license.html":{}}}],["6.2.1",{"_index":669,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":650,"title":{},"body":{"coverage.html":{}}}],["8.10.0",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":752,"title":{},"body":{"license.html":{}}}],["9.0.0",{"_index":663,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":670,"title":{},"body":{"dependencies.html":{}}}],["9/9",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":938,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1011,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1008,"title":{},"body":{"license.html":{}}}],["according",{"_index":695,"title":{},"body":{"miscellaneous/functions.html":{}}}],["accordingly",{"_index":559,"title":{},"body":{"contributing.html":{}}}],["act",{"_index":1016,"title":{},"body":{"license.html":{}}}],["acting",{"_index":759,"title":{},"body":{"license.html":{}}}],["acts",{"_index":987,"title":{},"body":{"license.html":{}}}],["actual",{"_index":542,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":598,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["addendum",{"_index":927,"title":{},"body":{"license.html":{}}}],["additional",{"_index":928,"title":{},"body":{"license.html":{}}}],["additions",{"_index":824,"title":{},"body":{"license.html":{}}}],["addressed",{"_index":569,"title":{},"body":{"contributing.html":{}}}],["advance",{"_index":471,"title":{},"body":{"contributing.html":{}}}],["advisable",{"_index":420,"title":{},"body":{"contributing.html":{}}}],["advised",{"_index":1006,"title":{},"body":{"license.html":{}}}],["against",{"_index":882,"title":{},"body":{"license.html":{}}}],["agree",{"_index":444,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["agreed",{"_index":962,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":943,"title":{},"body":{"license.html":{}}}],["aims",{"_index":605,"title":{},"body":{"contributing.html":{}}}],["alleging",{"_index":887,"title":{},"body":{"license.html":{}}}],["alone",{"_index":878,"title":{},"body":{"license.html":{}}}],["along",{"_index":918,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":926,"title":{},"body":{"license.html":{}}}],["already",{"_index":275,"title":{},"body":{"injectables/CustomerService.html":{},"contributing.html":{}}}],["alternatives",{"_index":631,"title":{},"body":{"contributing.html":{}}}],["amazing",{"_index":727,"title":{},"body":{"index.html":{}}}],["amount",{"_index":144,"title":{},"body":{"controllers/CustomerController.html":{}}}],["and/or",{"_index":1014,"title":{},"body":{"license.html":{}}}],["animated",{"_index":635,"title":{},"body":{"contributing.html":{}}}],["annotations",{"_index":812,"title":{},"body":{"license.html":{}}}],["answers",{"_index":422,"title":{},"body":{"contributing.html":{}}}],["apache",{"_index":740,"title":{},"body":{"license.html":{}}}],["api",{"_index":330,"title":{},"body":{"contributing.html":{}}}],["apioperation",{"_index":182,"title":{},"body":{"controllers/CustomerController.html":{}}}],["apiproperty",{"_index":55,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{}}}],["apiproperty({example",{"_index":24,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["apitags",{"_index":183,"title":{},"body":{"controllers/CustomerController.html":{}}}],["apitags('customer",{"_index":186,"title":{},"body":{"controllers/CustomerController.html":{}}}],["app",{"_index":711,"title":{},"body":{"index.html":{}}}],["appear",{"_index":923,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":805,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":960,"title":{},"body":{"license.html":{}}}],["application",{"_index":692,"title":{},"body":{"miscellaneous/functions.html":{}}}],["applications",{"_index":706,"title":{},"body":{"index.html":{}}}],["applies",{"_index":872,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1027,"title":{},"body":{"license.html":{}}}],["appreciation",{"_index":372,"title":{},"body":{"contributing.html":{}}}],["appropriate",{"_index":1035,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":974,"title":{},"body":{"license.html":{}}}],["archives",{"_index":1038,"title":{},"body":{"license.html":{}}}],["arising",{"_index":994,"title":{},"body":{"license.html":{}}}],["arm",{"_index":507,"title":{},"body":{"contributing.html":{}}}],["ask",{"_index":407,"title":{},"body":{"contributing.html":{}}}],["asserted",{"_index":1024,"title":{},"body":{"license.html":{}}}],["associated",{"_index":977,"title":{},"body":{"license.html":{}}}],["assume",{"_index":408,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["async",{"_index":115,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["attach",{"_index":1028,"title":{},"body":{"license.html":{}}}],["attached",{"_index":804,"title":{},"body":{"license.html":{}}}],["attribution",{"_index":644,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["authentication",{"_index":1060,"title":{},"body":{"todo.html":{}}}],["author",{"_index":733,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authored",{"_index":445,"title":{},"body":{"contributing.html":{}}}],["authorized",{"_index":756,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":800,"title":{},"body":{"license.html":{}}}],["available",{"_index":409,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["await",{"_index":208,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["b",{"_index":901,"title":{},"body":{"license.html":{}}}],["backers",{"_index":728,"title":{},"body":{"index.html":{}}}],["based",{"_index":646,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["baseentity",{"_index":99,"title":{},"body":{"entities/Customer.html":{}}}],["basic",{"_index":307,"title":{},"body":{"changelog.html":{}}}],["basis",{"_index":964,"title":{},"body":{"license.html":{}}}],["before",{"_index":354,"title":{},"body":{"contributing.html":{}}}],["beforeinsert",{"_index":104,"title":{},"body":{"entities/Customer.html":{}}}],["behalf",{"_index":828,"title":{},"body":{"license.html":{}}}],["behavior",{"_index":405,"title":{},"body":{"contributing.html":{}}}],["below",{"_index":806,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":781,"title":{},"body":{"license.html":{}}}],["best",{"_index":410,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":641,"title":{},"body":{"contributing.html":{}}}],["bind",{"_index":821,"title":{},"body":{"license.html":{}}}],["birth",{"_index":28,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{}}}],["birth_date",{"_index":73,"title":{},"body":{"entities/Customer.html":{}}}],["birthdate",{"_index":17,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{}}}],["body",{"_index":167,"title":{},"body":{"controllers/CustomerController.html":{}}}],["boilerplate",{"_index":1029,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":264,"title":{},"body":{"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":311,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["brackets",{"_index":1032,"title":{},"body":{"license.html":{}}}],["branch",{"_index":305,"title":{},"body":{"changelog.html":{}}}],["brazilian",{"_index":41,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":1048,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1046,"title":{},"body":{"modules.html":{}}}],["bug",{"_index":454,"title":{},"body":{"contributing.html":{}}}],["bugs",{"_index":390,"title":{},"body":{"contributing.html":{}}}],["building",{"_index":703,"title":{},"body":{"index.html":{}}}],["c",{"_index":908,"title":{},"body":{"license.html":{}}}],["can't",{"_index":535,"title":{},"body":{"contributing.html":{}}}],["care",{"_index":439,"title":{},"body":{"contributing.html":{}}}],["carefully",{"_index":465,"title":{},"body":{"contributing.html":{}}}],["carry",{"_index":903,"title":{},"body":{"license.html":{}}}],["case",{"_index":413,"title":{},"body":{"contributing.html":{}}}],["cause",{"_index":768,"title":{},"body":{"license.html":{}}}],["challenge",{"_index":329,"title":{},"body":{"contributing.html":{}}}],["changed",{"_index":907,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":303,"title":{"changelog.html":{}},"body":{}}],["character",{"_index":993,"title":{},"body":{"license.html":{}}}],["charge",{"_index":857,"title":{},"body":{"license.html":{}}}],["chase",{"_index":460,"title":{},"body":{"contributing.html":{}}}],["check",{"_index":487,"title":{},"body":{"contributing.html":{}}}],["checks",{"_index":262,"title":{},"body":{"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["choose",{"_index":1009,"title":{},"body":{"license.html":{}}}],["citizen",{"_index":697,"title":{},"body":{"miscellaneous/functions.html":{}}}],["claim",{"_index":884,"title":{},"body":{"license.html":{}}}],["claims",{"_index":873,"title":{},"body":{"license.html":{}}}],["clarification",{"_index":418,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":0,"title":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{},"dependencies.html":{},"license.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"overview.html":{},"todo.html":{}}}],["clear",{"_index":624,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["cluster_customermodule",{"_index":221,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["cluster_customermodule_providers",{"_index":222,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["code",{"_index":385,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["collect",{"_index":466,"title":{},"body":{"contributing.html":{}}}],["collected",{"_index":554,"title":{},"body":{"contributing.html":{}}}],["column",{"_index":100,"title":{},"body":{"entities/Customer.html":{}}}],["column({name",{"_index":72,"title":{},"body":{"entities/Customer.html":{}}}],["combination",{"_index":879,"title":{},"body":{"license.html":{}}}],["comment",{"_index":599,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["commercial",{"_index":1003,"title":{},"body":{"license.html":{}}}],["commit",{"_index":326,"title":{},"body":{"changelog.html":{},"contributing.html":{}}}],["common",{"_index":762,"title":{},"body":{"license.html":{}}}],["communication",{"_index":832,"title":{},"body":{"license.html":{}}}],["community",{"_index":363,"title":{},"body":{"contributing.html":{}}}],["compiled",{"_index":796,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":509,"title":{},"body":{"contributing.html":{}}}],["complete",{"_index":469,"title":{},"body":{"contributing.html":{}}}],["completely",{"_index":583,"title":{},"body":{"contributing.html":{}}}],["compliance",{"_index":1039,"title":{},"body":{"license.html":{}}}],["complies",{"_index":932,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":312,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["components/versions",{"_index":485,"title":{},"body":{"contributing.html":{}}}],["computer",{"_index":1000,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":746,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":386,"title":{},"body":{"contributing.html":{}}}],["config",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["configuration",{"_index":595,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["consequential",{"_index":992,"title":{},"body":{"license.html":{}}}],["consider",{"_index":619,"title":{},"body":{"contributing.html":{}}}],["consistent",{"_index":1015,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":842,"title":{},"body":{"license.html":{}}}],["const",{"_index":211,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["constitutes",{"_index":888,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":188,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["constructor(@injectrepository(customer",{"_index":268,"title":{},"body":{"injectables/CustomerService.html":{}}}],["constructor(private",{"_index":192,"title":{},"body":{"controllers/CustomerController.html":{}}}],["constructor(repository",{"_index":240,"title":{},"body":{"injectables/CustomerService.html":{}}}],["construed",{"_index":929,"title":{},"body":{"license.html":{}}}],["contained",{"_index":915,"title":{},"body":{"license.html":{}}}],["containing",{"_index":245,"title":{},"body":{"injectables/CustomerService.html":{}}}],["content",{"_index":447,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["contents",{"_index":341,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["context",{"_index":429,"title":{},"body":{"contributing.html":{}}}],["contract",{"_index":771,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":335,"title":{},"body":{"contributing.html":{}}}],["contributing",{"_index":327,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contribution",{"_index":356,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["contribution(s",{"_index":877,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":336,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["contributor",{"_index":844,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":889,"title":{},"body":{"license.html":{}}}],["control",{"_index":760,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":761,"title":{},"body":{"license.html":{}}}],["controller",{"_index":107,"title":{"controllers/CustomerController.html":{}},"body":{"controllers/CustomerController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('customer",{"_index":187,"title":{},"body":{"controllers/CustomerController.html":{}}}],["controllers",{"_index":109,"title":{},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{}}}],["conversions",{"_index":798,"title":{},"body":{"license.html":{}}}],["convince",{"_index":607,"title":{},"body":{"contributing.html":{}}}],["copies",{"_index":894,"title":{},"body":{"license.html":{}}}],["copy",{"_index":900,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":754,"title":{},"body":{"license.html":{}}}],["counterclaim",{"_index":885,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":648,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covered",{"_index":592,"title":{},"body":{"contributing.html":{}}}],["cpf",{"_index":18,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["cpf.replace(/[^\\d]+/g",{"_index":213,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["create",{"_index":114,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"contributing.html":{}}}],["create(@body",{"_index":195,"title":{},"body":{"controllers/CustomerController.html":{}}}],["create(createcustomerdto",{"_index":121,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["createcustomerdto",{"_index":1,"title":{"classes/CreateCustomerDto.html":{}},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["createcustomerdto.cpf",{"_index":273,"title":{},"body":{"injectables/CustomerService.html":{}}}],["created",{"_index":88,"title":{},"body":{"entities/Customer.html":{},"injectables/CustomerService.html":{}}}],["created_at",{"_index":83,"title":{},"body":{"entities/Customer.html":{}}}],["createdat",{"_index":69,"title":{},"body":{"entities/Customer.html":{}}}],["createdatecolumn",{"_index":103,"title":{},"body":{"entities/Customer.html":{}}}],["createdatecolumn({name",{"_index":82,"title":{},"body":{"entities/Customer.html":{}}}],["creates",{"_index":125,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["creating",{"_index":1055,"title":{},"body":{"todo.html":{}}}],["critical",{"_index":576,"title":{},"body":{"contributing.html":{}}}],["cross",{"_index":883,"title":{},"body":{"license.html":{}}}],["current",{"_index":630,"title":{},"body":{"contributing.html":{}}}],["current_timestamp(6",{"_index":86,"title":{},"body":{"entities/Customer.html":{}}}],["customary",{"_index":954,"title":{},"body":{"license.html":{}}}],["customer",{"_index":64,"title":{"entities/Customer.html":{}},"body":{"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"contributing.html":{},"coverage.html":{}}}],["customer's",{"_index":36,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["customer'})@httpcode(httpstatus.created",{"_index":123,"title":{},"body":{"controllers/CustomerController.html":{}}}],["customer.controller",{"_index":230,"title":{},"body":{"modules/CustomerModule.html":{}}}],["customer.dto",{"_index":180,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{}}}],["customer.dto.ts",{"_index":7,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["customer.dto.ts:17",{"_index":49,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:26",{"_index":44,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.dto.ts:35",{"_index":35,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customer.service",{"_index":177,"title":{},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{}}}],["customer\\'s",{"_index":60,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["customercontroller",{"_index":108,"title":{"controllers/CustomerController.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"coverage.html":{}}}],["customermodule",{"_index":218,"title":{"modules/CustomerModule.html":{}},"body":{"modules/CustomerModule.html":{},"modules.html":{},"overview.html":{}}}],["customers",{"_index":13,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{}}}],["customers).length",{"_index":289,"title":{},"body":{"injectables/CustomerService.html":{}}}],["customerservice",{"_index":176,"title":{"injectables/CustomerService.html":{}},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"coverage.html":{},"overview.html":{}}}],["d",{"_index":912,"title":{},"body":{"license.html":{}}}],["damages",{"_index":989,"title":{},"body":{"license.html":{}}}],["data",{"_index":207,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["database",{"_index":126,"title":{},"body":{"controllers/CustomerController.html":{}}}],["date",{"_index":22,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"license.html":{}}}],["dd",{"_index":31,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["decorators",{"_index":23,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{}}}],["default",{"_index":85,"title":{},"body":{"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["defend",{"_index":1020,"title":{},"body":{"license.html":{}}}],["defined",{"_index":34,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"license.html":{}}}],["definition",{"_index":9,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"license.html":{}}}],["definitions",{"_index":748,"title":{},"body":{"license.html":{}}}],["delete",{"_index":170,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["delete(':id",{"_index":158,"title":{},"body":{"controllers/CustomerController.html":{}}}],["deleted",{"_index":258,"title":{},"body":{"injectables/CustomerService.html":{}}}],["deletes",{"_index":160,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["delgado",{"_index":48,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["delgado/01",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["delgado/basic",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["deliberate",{"_index":984,"title":{},"body":{"license.html":{}}}],["demonstrate",{"_index":637,"title":{},"body":{"contributing.html":{}}}],["dependencies",{"_index":220,"title":{"dependencies.html":{}},"body":{"modules/CustomerModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":437,"title":{},"body":{"contributing.html":{}}}],["derivative",{"_index":807,"title":{},"body":{"license.html":{}}}],["derived",{"_index":809,"title":{},"body":{"license.html":{}}}],["describe",{"_index":467,"title":{},"body":{"contributing.html":{}}}],["describing",{"_index":955,"title":{},"body":{"license.html":{}}}],["description",{"_index":8,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"contributing.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["descriptive",{"_index":625,"title":{},"body":{"contributing.html":{}}}],["designated",{"_index":843,"title":{},"body":{"license.html":{}}}],["detail",{"_index":468,"title":{},"body":{"contributing.html":{}}}],["details",{"_index":345,"title":{},"body":{"contributing.html":{}}}],["determine",{"_index":478,"title":{},"body":{"contributing.html":{}}}],["determining",{"_index":973,"title":{},"body":{"license.html":{}}}],["developers",{"_index":608,"title":{},"body":{"contributing.html":{}}}],["development",{"_index":712,"title":{},"body":{"index.html":{}}}],["different",{"_index":342,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["direct",{"_index":766,"title":{},"body":{"license.html":{}}}],["direction",{"_index":769,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":958,"title":{},"body":{"license.html":{}}}],["discussed",{"_index":499,"title":{},"body":{"contributing.html":{}}}],["discussing",{"_index":840,"title":{},"body":{"license.html":{}}}],["display",{"_index":863,"title":{},"body":{"license.html":{}}}],["displayed",{"_index":250,"title":{},"body":{"injectables/CustomerService.html":{}}}],["distribute",{"_index":865,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":917,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":747,"title":{},"body":{"license.html":{}}}],["dockerfile",{"_index":1056,"title":{},"body":{"todo.html":{}}}],["document",{"_index":46,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"injectables/CustomerService.html":{},"license.html":{}}}],["documentation",{"_index":310,"title":{},"body":{"changelog.html":{},"contributing.html":{},"coverage.html":{},"license.html":{},"todo.html":{}}}],["don't",{"_index":366,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["dto",{"_index":244,"title":{},"body":{"injectables/CustomerService.html":{}}}],["dto/create",{"_index":179,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["dto/update",{"_index":181,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["duplicated",{"_index":271,"title":{},"body":{"injectables/CustomerService.html":{}}}],["e.g",{"_index":482,"title":{},"body":{"contributing.html":{}}}],["e2e",{"_index":720,"title":{},"body":{"index.html":{}}}],["each",{"_index":698,"title":{},"body":{"miscellaneous/functions.html":{},"license.html":{}}}],["easier",{"_index":358,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["easy",{"_index":369,"title":{},"body":{"contributing.html":{}}}],["edition",{"_index":296,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["editorial",{"_index":810,"title":{},"body":{"license.html":{}}}],["efficient",{"_index":704,"title":{},"body":{"index.html":{}}}],["elaborations",{"_index":813,"title":{},"body":{"license.html":{}}}],["electronic",{"_index":829,"title":{},"body":{"license.html":{}}}],["elsewhere",{"_index":526,"title":{},"body":{"contributing.html":{}}}],["email",{"_index":530,"title":{},"body":{"contributing.html":{}}}],["enclosed",{"_index":1031,"title":{},"body":{"license.html":{}}}],["encouraged",{"_index":337,"title":{},"body":{"contributing.html":{}}}],["end",{"_index":1026,"title":{},"body":{"license.html":{}}}],["enhancement",{"_index":581,"title":{},"body":{"contributing.html":{}}}],["enhancements",{"_index":392,"title":{},"body":{"contributing.html":{}}}],["entered",{"_index":694,"title":{},"body":{"miscellaneous/functions.html":{}}}],["entities",{"_index":65,"title":{},"body":{"entities/Customer.html":{},"license.html":{},"overview.html":{}}}],["entities/customer.entity",{"_index":178,"title":{},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{}}}],["entity",{"_index":63,"title":{"entities/Customer.html":{}},"body":{"entities/Customer.html":{},"coverage.html":{},"license.html":{}}}],["environment",{"_index":484,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["errors",{"_index":533,"title":{},"body":{"contributing.html":{}}}],["etc",{"_index":436,"title":{},"body":{"contributing.html":{}}}],["even",{"_index":1005,"title":{},"body":{"license.html":{}}}],["event",{"_index":980,"title":{},"body":{"license.html":{}}}],["everyone",{"_index":398,"title":{},"body":{"contributing.html":{}}}],["example",{"_index":59,"title":{},"body":{"classes/CreateCustomerDto.html":{},"license.html":{}}}],["except",{"_index":867,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":841,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":856,"title":{},"body":{"license.html":{}}}],["executed",{"_index":944,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":978,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":782,"title":{},"body":{"license.html":{}}}],["exist",{"_index":153,"title":{},"body":{"controllers/CustomerController.html":{}}}],["existing",{"_index":256,"title":{},"body":{"injectables/CustomerService.html":{},"contributing.html":{}}}],["existingcustomer",{"_index":278,"title":{},"body":{"injectables/CustomerService.html":{}}}],["exists",{"_index":276,"title":{},"body":{"injectables/CustomerService.html":{}}}],["expect",{"_index":541,"title":{},"body":{"contributing.html":{}}}],["expected",{"_index":401,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":361,"title":{},"body":{"contributing.html":{}}}],["experienced",{"_index":489,"title":{},"body":{"contributing.html":{}}}],["explain",{"_index":540,"title":{},"body":{"contributing.html":{}}}],["explicitly",{"_index":935,"title":{},"body":{"license.html":{}}}],["export",{"_index":57,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{}}}],["express",{"_index":668,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":106,"title":{},"body":{"entities/Customer.html":{},"classes/UpdateCustomerDto.html":{}}}],["failure",{"_index":1001,"title":{},"body":{"license.html":{}}}],["false",{"_index":699,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fast",{"_index":474,"title":{},"body":{"contributing.html":{}}}],["feature",{"_index":610,"title":{},"body":{"contributing.html":{}}}],["features",{"_index":584,"title":{},"body":{"contributing.html":{}}}],["fee",{"_index":1010,"title":{},"body":{"license.html":{}}}],["feel",{"_index":423,"title":{},"body":{"contributing.html":{}}}],["fetches",{"_index":135,"title":{},"body":{"controllers/CustomerController.html":{}}}],["fields",{"_index":1030,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":775,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{},"license.html":{},"todo.html":{}}}],["filed",{"_index":558,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["files",{"_index":790,"title":{},"body":{"license.html":{}}}],["find",{"_index":590,"title":{},"body":{"contributing.html":{}}}],["findall",{"_index":116,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["findall(@query('page",{"_index":198,"title":{},"body":{"controllers/CustomerController.html":{}}}],["findall(page",{"_index":132,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["findbycpf",{"_index":117,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["findbycpf(@param('cpf",{"_index":203,"title":{},"body":{"controllers/CustomerController.html":{}}}],["findbycpf(cpf",{"_index":147,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["findone",{"_index":118,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["findone(@param('id",{"_index":201,"title":{},"body":{"controllers/CustomerController.html":{}}}],["findone(id",{"_index":154,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["fine",{"_index":368,"title":{},"body":{"contributing.html":{}}}],["first",{"_index":331,"title":{},"body":{"contributing.html":{}}}],["fitness",{"_index":970,"title":{},"body":{"license.html":{}}}],["fits",{"_index":603,"title":{},"body":{"contributing.html":{}}}],["fix",{"_index":472,"title":{},"body":{"contributing.html":{}}}],["follow",{"_index":545,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":425,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["form",{"_index":785,"title":{},"body":{"license.html":{}}}],["format",{"_index":32,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"license.html":{}}}],["forward",{"_index":365,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":146,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"contributing.html":{}}}],["framework",{"_index":702,"title":{},"body":{"index.html":{}}}],["free",{"_index":859,"title":{},"body":{"license.html":{}}}],["friends/colleagues",{"_index":384,"title":{},"body":{"contributing.html":{}}}],["function",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["functionality",{"_index":587,"title":{},"body":{"contributing.html":{}}}],["functions",{"_index":688,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"todo.html":{}}}],["gen",{"_index":647,"title":{},"body":{"contributing.html":{}}}],["generated",{"_index":797,"title":{},"body":{"license.html":{}}}],["get(':id",{"_index":155,"title":{},"body":{"controllers/CustomerController.html":{}}}],["get('cpf/:cpf",{"_index":148,"title":{},"body":{"controllers/CustomerController.html":{}}}],["getting",{"_index":301,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["gifs",{"_index":636,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":498,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["give",{"_index":898,"title":{},"body":{"license.html":{}}}],["golevelup/nestjs",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["good",{"_index":455,"title":{},"body":{"contributing.html":{}}}],["goodwill",{"_index":998,"title":{},"body":{"license.html":{}}}],["governed",{"_index":400,"title":{},"body":{"contributing.html":{}}}],["governing",{"_index":1044,"title":{},"body":{"license.html":{}}}],["grant",{"_index":849,"title":{},"body":{"license.html":{}}}],["granted",{"_index":784,"title":{},"body":{"license.html":{}}}],["granting",{"_index":757,"title":{},"body":{"license.html":{}}}],["grants",{"_index":852,"title":{},"body":{"license.html":{}}}],["grossly",{"_index":985,"title":{},"body":{"license.html":{}}}],["grow",{"_index":725,"title":{},"body":{"index.html":{}}}],["guide",{"_index":645,"title":{},"body":{"contributing.html":{}}}],["guidelines",{"_index":588,"title":{},"body":{"contributing.html":{}}}],["guides",{"_index":579,"title":{},"body":{"contributing.html":{}}}],["handles",{"_index":347,"title":{},"body":{"contributing.html":{}}}],["handling",{"_index":113,"title":{},"body":{"controllers/CustomerController.html":{}}}],["happy",{"_index":374,"title":{},"body":{"contributing.html":{}}}],["harmless",{"_index":1022,"title":{},"body":{"license.html":{}}}],["having",{"_index":492,"title":{},"body":{"contributing.html":{}}}],["help",{"_index":344,"title":{},"body":{"contributing.html":{}}}],["helper/helper",{"_index":185,"title":{},"body":{"controllers/CustomerController.html":{}}}],["here",{"_index":730,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":851,"title":{},"body":{"license.html":{}}}],["herein",{"_index":940,"title":{},"body":{"license.html":{}}}],["hold",{"_index":1021,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses",{"_index":744,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":1041,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":173,"title":{},"body":{"controllers/CustomerController.html":{}}}],["httpcode(httpstatus.created",{"_index":194,"title":{},"body":{"controllers/CustomerController.html":{}}}],["https://nestjs.com",{"_index":737,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":174,"title":{},"body":{"controllers/CustomerController.html":{}}}],["id",{"_index":70,"title":{},"body":{"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["idea",{"_index":602,"title":{},"body":{"contributing.html":{}}}],["identification",{"_index":42,"title":{},"body":{"classes/CreateCustomerDto.html":{},"license.html":{}}}],["identified",{"_index":150,"title":{},"body":{"controllers/CustomerController.html":{}}}],["identifier",{"_index":91,"title":{},"body":{"entities/Customer.html":{},"controllers/CustomerController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["identify",{"_index":627,"title":{},"body":{"contributing.html":{}}}],["identifying",{"_index":1034,"title":{},"body":{"license.html":{}}}],["igma",{"_index":328,"title":{},"body":{"contributing.html":{}}}],["ii",{"_index":773,"title":{},"body":{"license.html":{}}}],["iii",{"_index":780,"title":{},"body":{"license.html":{}}}],["image",{"_index":1057,"title":{},"body":{"todo.html":{}}}],["implementation",{"_index":1053,"title":{},"body":{"todo.html":{}}}],["implemented",{"_index":578,"title":{},"body":{"contributing.html":{},"miscellaneous/functions.html":{}}}],["implied",{"_index":967,"title":{},"body":{"license.html":{}}}],["import",{"_index":50,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"license.html":{}}}],["imports",{"_index":231,"title":{},"body":{"modules/CustomerModule.html":{}}}],["improvements",{"_index":586,"title":{},"body":{"contributing.html":{}}}],["improving",{"_index":393,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["inability",{"_index":996,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":991,"title":{},"body":{"license.html":{}}}],["include",{"_index":633,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["included",{"_index":803,"title":{},"body":{"license.html":{}}}],["includes",{"_index":548,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["including",{"_index":494,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["inclusion",{"_index":827,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":483,"title":{},"body":{"contributing.html":{}}}],["incorporated",{"_index":847,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1023,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1019,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1012,"title":{},"body":{"license.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["indicated",{"_index":802,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":767,"title":{},"body":{"license.html":{}}}],["individual",{"_index":594,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{}}}],["information",{"_index":10,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{},"contributing.html":{},"license.html":{}}}],["informational",{"_index":924,"title":{},"body":{"license.html":{}}}],["informed",{"_index":151,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["infringed",{"_index":876,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":890,"title":{},"body":{"license.html":{}}}],["initial",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["initialize",{"_index":189,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["injectable",{"_index":233,"title":{"injectables/CustomerService.html":{}},"body":{"injectables/CustomerService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":234,"title":{},"body":{"injectables/CustomerService.html":{}}}],["injectrepository",{"_index":266,"title":{},"body":{"injectables/CustomerService.html":{}}}],["input",{"_index":515,"title":{},"body":{"contributing.html":{}}}],["inspiration",{"_index":643,"title":{},"body":{"contributing.html":{}}}],["install",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["installation",{"_index":324,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["installrunning",{"_index":710,"title":{},"body":{"index.html":{}}}],["instead",{"_index":528,"title":{},"body":{"contributing.html":{}}}],["institute",{"_index":880,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":825,"title":{},"body":{"license.html":{}}}],["interfaces",{"_index":822,"title":{},"body":{"license.html":{}}}],["internet",{"_index":421,"title":{},"body":{"contributing.html":{}}}],["interpreter",{"_index":508,"title":{},"body":{"contributing.html":{}}}],["invalid",{"_index":272,"title":{},"body":{"injectables/CustomerService.html":{}}}],["investigate",{"_index":464,"title":{},"body":{"contributing.html":{}}}],["involved",{"_index":362,"title":{},"body":{"contributing.html":{}}}],["irrevocable",{"_index":860,"title":{},"body":{"license.html":{}}}],["isdatestring",{"_index":53,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["isnotempty",{"_index":51,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["isolate",{"_index":550,"title":{},"body":{"contributing.html":{}}}],["isstring",{"_index":52,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["issue",{"_index":415,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["issues",{"_index":412,"title":{},"body":{"contributing.html":{}}}],["isvalidcpf",{"_index":184,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isvalidcpf(cpf",{"_index":204,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["it's",{"_index":557,"title":{},"body":{"contributing.html":{}}}],["january",{"_index":742,"title":{},"body":{"license.html":{}}}],["jest",{"_index":1054,"title":{},"body":{"todo.html":{}}}],["join",{"_index":396,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["kamil",{"_index":734,"title":{},"body":{"index.html":{}}}],["keep",{"_index":611,"title":{},"body":{"contributing.html":{}}}],["kind",{"_index":966,"title":{},"body":{"license.html":{}}}],["label",{"_index":539,"title":{},"body":{"contributing.html":{}}}],["language",{"_index":1043,"title":{},"body":{"license.html":{}}}],["last",{"_index":97,"title":{},"body":{"entities/Customer.html":{}}}],["latest",{"_index":476,"title":{},"body":{"contributing.html":{}}}],["law",{"_index":961,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":886,"title":{},"body":{"license.html":{}}}],["leave",{"_index":457,"title":{},"body":{"contributing.html":{}}}],["left",{"_index":577,"title":{},"body":{"contributing.html":{}}}],["legal",{"_index":442,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["length",{"_index":76,"title":{},"body":{"entities/Customer.html":{}}}],["liability",{"_index":979,"title":{},"body":{"license.html":{}}}],["liable",{"_index":988,"title":{},"body":{"license.html":{}}}],["library",{"_index":622,"title":{},"body":{"contributing.html":{}}}],["licensable",{"_index":874,"title":{},"body":{"license.html":{}}}],["license",{"_index":452,"title":{"license.html":{}},"body":{"contributing.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":724,"title":{},"body":{"index.html":{},"license.html":{}}}],["licenses",{"_index":891,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":753,"title":{},"body":{"license.html":{}}}],["limit",{"_index":133,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["limitation",{"_index":968,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1045,"title":{},"body":{"license.html":{}}}],["limited",{"_index":788,"title":{},"body":{"license.html":{}}}],["link",{"_index":820,"title":{},"body":{"license.html":{}}}],["linux",{"_index":504,"title":{},"body":{"contributing.html":{}}}],["list",{"_index":143,"title":{},"body":{"controllers/CustomerController.html":{}}}],["lists",{"_index":835,"title":{},"body":{"license.html":{}}}],["litigation",{"_index":881,"title":{},"body":{"license.html":{}}}],["local",{"_index":381,"title":{},"body":{"contributing.html":{}}}],["looking",{"_index":486,"title":{},"body":{"contributing.html":{}}}],["looks",{"_index":364,"title":{},"body":{"contributing.html":{}}}],["loss",{"_index":997,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1004,"title":{},"body":{"license.html":{}}}],["lot",{"_index":357,"title":{},"body":{"contributing.html":{}}}],["macos",{"_index":505,"title":{},"body":{"contributing.html":{}}}],["made",{"_index":801,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":834,"title":{},"body":{"license.html":{}}}],["maintainers",{"_index":359,"title":{},"body":{"contributing.html":{}}}],["majority",{"_index":614,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":349,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["making",{"_index":355,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["malfunction",{"_index":1002,"title":{},"body":{"license.html":{}}}],["managed",{"_index":838,"title":{},"body":{"license.html":{}}}],["management",{"_index":770,"title":{},"body":{"license.html":{}}}],["manager",{"_index":513,"title":{},"body":{"contributing.html":{}}}],["many",{"_index":629,"title":{},"body":{"contributing.html":{}}}],["mark",{"_index":565,"title":{},"body":{"contributing.html":{}}}],["marked",{"_index":572,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["marks",{"_index":950,"title":{},"body":{"license.html":{}}}],["matching",{"_index":62,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{}}}],["maybe",{"_index":593,"title":{},"body":{"contributing.html":{}}}],["mean",{"_index":750,"title":{},"body":{"license.html":{}}}],["means",{"_index":764,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":793,"title":{},"body":{"license.html":{}}}],["media",{"_index":799,"title":{},"body":{"license.html":{}}}],["medium",{"_index":895,"title":{},"body":{"license.html":{}}}],["meet",{"_index":897,"title":{},"body":{"license.html":{}}}],["meetups",{"_index":382,"title":{},"body":{"contributing.html":{}}}],["member",{"_index":560,"title":{},"body":{"contributing.html":{}}}],["members",{"_index":191,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["mention",{"_index":380,"title":{},"body":{"contributing.html":{}}}],["merchantability",{"_index":969,"title":{},"body":{"license.html":{}}}],["merely",{"_index":819,"title":{},"body":{"license.html":{}}}],["merge",{"_index":304,"title":{},"body":{"changelog.html":{}}}],["merits",{"_index":609,"title":{},"body":{"contributing.html":{}}}],["messages",{"_index":395,"title":{},"body":{"contributing.html":{}}}],["metadata",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":112,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["mind",{"_index":612,"title":{},"body":{"contributing.html":{}}}],["minor",{"_index":585,"title":{},"body":{"contributing.html":{}}}],["minority",{"_index":618,"title":{},"body":{"contributing.html":{}}}],["miscellaneous",{"_index":687,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":723,"title":{},"body":{"index.html":{}}}],["mm",{"_index":30,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["mode",{"_index":715,"title":{},"body":{"index.html":{}}}],["modeling",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["modifications",{"_index":787,"title":{},"body":{"license.html":{}}}],["modified",{"_index":902,"title":{},"body":{"license.html":{}}}],["modify",{"_index":925,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":930,"title":{},"body":{"license.html":{}}}],["module",{"_index":217,"title":{"modules/CustomerModule.html":{}},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["modules",{"_index":219,"title":{"modules.html":{}},"body":{"modules/CustomerModule.html":{},"modules.html":{}}}],["more",{"_index":462,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["much",{"_index":428,"title":{},"body":{"contributing.html":{}}}],["myśliwiec",{"_index":735,"title":{},"body":{"index.html":{}}}],["name",{"_index":19,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["names",{"_index":949,"title":{},"body":{"license.html":{}}}],["national",{"_index":45,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["necessarily",{"_index":875,"title":{},"body":{"license.html":{}}}],["necessary",{"_index":448,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":417,"title":{},"body":{"contributing.html":{}}}],["needing",{"_index":459,"title":{},"body":{"contributing.html":{}}}],["needs",{"_index":566,"title":{},"body":{"contributing.html":{}}}],["negligence",{"_index":983,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":986,"title":{},"body":{"license.html":{}}}],["nest",{"_index":707,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":739,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":323,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["nestjs/axios",{"_index":661,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":175,"title":{},"body":{"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":664,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":666,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":298,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":667,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":56,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":229,"title":{},"body":{"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"dependencies.html":{}}}],["never",{"_index":521,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":12,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"contributing.html":{},"coverage.html":{}}}],["newly",{"_index":246,"title":{},"body":{"injectables/CustomerService.html":{}}}],["node.js",{"_index":701,"title":{},"body":{"index.html":{}}}],["nodejs",{"_index":434,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["non",{"_index":855,"title":{},"body":{"license.html":{}}}],["normally",{"_index":922,"title":{},"body":{"license.html":{}}}],["notfoundexception",{"_index":265,"title":{},"body":{"injectables/CustomerService.html":{}}}],["notfoundexception(`customer",{"_index":291,"title":{},"body":{"injectables/CustomerService.html":{}}}],["nothing",{"_index":939,"title":{},"body":{"license.html":{}}}],["notice",{"_index":443,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["notices",{"_index":905,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":937,"title":{},"body":{"license.html":{}}}],["npm",{"_index":435,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["number",{"_index":40,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":791,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1013,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":1040,"title":{},"body":{"license.html":{}}}],["obvious",{"_index":562,"title":{},"body":{"contributing.html":{}}}],["offer",{"_index":869,"title":{},"body":{"license.html":{}}}],["older",{"_index":519,"title":{},"body":{"contributing.html":{}}}],["on/plugin",{"_index":621,"title":{},"body":{"contributing.html":{}}}],["once",{"_index":556,"title":{},"body":{"contributing.html":{}}}],["one",{"_index":601,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["open",{"_index":426,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["opening",{"_index":600,"title":{},"body":{"contributing.html":{}}}],["optional",{"_index":128,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["origin",{"_index":956,"title":{},"body":{"license.html":{}}}],["original",{"_index":816,"title":{},"body":{"license.html":{}}}],["os",{"_index":502,"title":{},"body":{"contributing.html":{}}}],["others",{"_index":458,"title":{},"body":{"contributing.html":{}}}],["otherwise",{"_index":772,"title":{},"body":{"license.html":{}}}],["out",{"_index":225,"title":{},"body":{"modules/CustomerModule.html":{},"contributing.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":516,"title":{},"body":{"contributing.html":{}}}],["outside",{"_index":497,"title":{},"body":{"contributing.html":{}}}],["outstanding",{"_index":778,"title":{},"body":{"license.html":{}}}],["overflow",{"_index":496,"title":{},"body":{"contributing.html":{}}}],["overview",{"_index":1049,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":755,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":774,"title":{},"body":{"license.html":{}}}],["package",{"_index":512,"title":{"dependencies.html":{},"properties.html":{}},"body":{"contributing.html":{}}}],["page",{"_index":137,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"license.html":{}}}],["paginated",{"_index":249,"title":{},"body":{"injectables/CustomerService.html":{}}}],["pagination",{"_index":139,"title":{},"body":{"controllers/CustomerController.html":{}}}],["param",{"_index":169,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["parameters",{"_index":127,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":638,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["partial",{"_index":314,"title":{},"body":{"changelog.html":{}}}],["partialtype",{"_index":297,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["partialtype(createcustomerdto",{"_index":300,"title":{},"body":{"classes/UpdateCustomerDto.html":{}}}],["participating",{"_index":399,"title":{},"body":{"contributing.html":{}}}],["particular",{"_index":971,"title":{},"body":{"license.html":{}}}],["party",{"_index":921,"title":{},"body":{"license.html":{}}}],["patch",{"_index":168,"title":{},"body":{"controllers/CustomerController.html":{}}}],["patch(':id",{"_index":163,"title":{},"body":{"controllers/CustomerController.html":{}}}],["patent",{"_index":866,"title":{},"body":{"license.html":{}}}],["per",{"_index":142,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["percent",{"_index":776,"title":{},"body":{"license.html":{}}}],["perform",{"_index":596,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["permission",{"_index":947,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":783,"title":{},"body":{"license.html":{}}}],["perpetual",{"_index":853,"title":{},"body":{"license.html":{}}}],["person",{"_index":152,"title":{},"body":{"controllers/CustomerController.html":{},"miscellaneous/functions.html":{}}}],["pertain",{"_index":911,"title":{},"body":{"license.html":{}}}],["pg",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["places",{"_index":916,"title":{},"body":{"license.html":{}}}],["platform",{"_index":432,"title":{},"body":{"contributing.html":{}}}],["please",{"_index":348,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["point",{"_index":536,"title":{},"body":{"contributing.html":{}}}],["possibility",{"_index":1007,"title":{},"body":{"license.html":{}}}],["possible",{"_index":441,"title":{},"body":{"contributing.html":{}}}],["possibly",{"_index":514,"title":{},"body":{"contributing.html":{}}}],["post",{"_index":166,"title":{},"body":{"controllers/CustomerController.html":{}}}],["post()@apioperation({description",{"_index":122,"title":{},"body":{"controllers/CustomerController.html":{}}}],["postgresql",{"_index":1059,"title":{},"body":{"todo.html":{}}}],["potential",{"_index":473,"title":{},"body":{"contributing.html":{}}}],["potentially",{"_index":490,"title":{},"body":{"contributing.html":{}}}],["power",{"_index":765,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":786,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":111,"title":{},"body":{"controllers/CustomerController.html":{}}}],["prepare",{"_index":861,"title":{},"body":{"license.html":{}}}],["previous",{"_index":555,"title":{},"body":{"contributing.html":{}}}],["primarygeneratedcolumn",{"_index":101,"title":{},"body":{"entities/Customer.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":89,"title":{},"body":{"entities/Customer.html":{}}}],["printed",{"_index":1037,"title":{},"body":{"license.html":{}}}],["private",{"_index":269,"title":{},"body":{"injectables/CustomerService.html":{}}}],["problem",{"_index":551,"title":{},"body":{"contributing.html":{}}}],["product",{"_index":951,"title":{},"body":{"license.html":{}}}],["production",{"_index":717,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":700,"title":{},"body":{"index.html":{}}}],["project",{"_index":346,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["project's",{"_index":378,"title":{},"body":{"contributing.html":{}}}],["projects",{"_index":640,"title":{},"body":{"contributing.html":{}}}],["prominent",{"_index":904,"title":{},"body":{"license.html":{}}}],["promise",{"_index":130,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["properties",{"_index":16,"title":{"properties.html":{}},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"properties.html":{}}}],["property",{"_index":58,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["provide",{"_index":427,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["provided",{"_index":450,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["providers",{"_index":227,"title":{},"body":{"modules/CustomerModule.html":{}}}],["provides",{"_index":963,"title":{},"body":{"license.html":{}}}],["providing",{"_index":238,"title":{},"body":{"injectables/CustomerService.html":{}}}],["public",{"_index":527,"title":{},"body":{"contributing.html":{}}}],["publicly",{"_index":862,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1061,"title":{},"body":{"todo.html":{}}}],["pull",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":839,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":763,"title":{},"body":{"license.html":{}}}],["query",{"_index":171,"title":{},"body":{"controllers/CustomerController.html":{}}}],["query('limit",{"_index":199,"title":{},"body":{"controllers/CustomerController.html":{}}}],["question",{"_index":387,"title":{},"body":{"contributing.html":{}}}],["read",{"_index":351,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["readable",{"_index":914,"title":{},"body":{"license.html":{}}}],["readme",{"_index":379,"title":{},"body":{"contributing.html":{},"todo.html":{}}}],["readonly",{"_index":193,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["really",{"_index":479,"title":{},"body":{"contributing.html":{}}}],["reason",{"_index":1025,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":953,"title":{},"body":{"license.html":{}}}],["received",{"_index":845,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":899,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":424,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["record",{"_index":141,"title":{},"body":{"controllers/CustomerController.html":{},"contributing.html":{}}}],["records",{"_index":251,"title":{},"body":{"injectables/CustomerService.html":{}}}],["recreate",{"_index":546,"title":{},"body":{"contributing.html":{}}}],["redistributing",{"_index":975,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":893,"title":{},"body":{"license.html":{}}}],["reduced",{"_index":552,"title":{},"body":{"contributing.html":{}}}],["refer",{"_index":377,"title":{},"body":{"contributing.html":{}}}],["reflect",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["regarding",{"_index":945,"title":{},"body":{"license.html":{}}}],["register",{"_index":131,"title":{},"body":{"controllers/CustomerController.html":{}}}],["registers",{"_index":145,"title":{},"body":{"controllers/CustomerController.html":{}}}],["registry",{"_index":81,"title":{},"body":{"entities/Customer.html":{}}}],["related",{"_index":523,"title":{},"body":{"contributing.html":{}}}],["relevant",{"_index":352,"title":{},"body":{"contributing.html":{}}}],["reliably",{"_index":517,"title":{},"body":{"contributing.html":{}}}],["remain",{"_index":817,"title":{},"body":{"license.html":{}}}],["remove",{"_index":119,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["remove(@param('id",{"_index":215,"title":{},"body":{"controllers/CustomerController.html":{}}}],["remove(id",{"_index":157,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["replaced",{"_index":1033,"title":{},"body":{"license.html":{}}}],["report",{"_index":403,"title":{},"body":{"contributing.html":{}}}],["reporting",{"_index":389,"title":{},"body":{"contributing.html":{}}}],["reports",{"_index":549,"title":{},"body":{"contributing.html":{}}}],["repository",{"_index":241,"title":{},"body":{"injectables/CustomerService.html":{},"index.html":{}}}],["represent",{"_index":814,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":833,"title":{},"body":{"license.html":{}}}],["represents",{"_index":67,"title":{},"body":{"entities/Customer.html":{}}}],["repro",{"_index":567,"title":{},"body":{"contributing.html":{}}}],["reproduce",{"_index":518,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["reproduced",{"_index":571,"title":{},"body":{"contributing.html":{}}}],["reproducing",{"_index":957,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":543,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["request",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["requests",{"_index":14,"title":{},"body":{"classes/CreateCustomerDto.html":{},"controllers/CustomerController.html":{},"classes/UpdateCustomerDto.html":{}}}],["required",{"_index":952,"title":{},"body":{"license.html":{}}}],["reset",{"_index":224,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}],["responsibility",{"_index":1018,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":237,"title":{},"body":{"injectables/CustomerService.html":{},"license.html":{}}}],["result",{"_index":995,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":792,"title":{},"body":{"license.html":{}}}],["results",{"_index":61,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"changelog.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{}}}],["retain",{"_index":909,"title":{},"body":{"license.html":{}}}],["retrieved",{"_index":252,"title":{},"body":{"injectables/CustomerService.html":{}}}],["retrieves",{"_index":248,"title":{},"body":{"injectables/CustomerService.html":{}}}],["return",{"_index":196,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["returns",{"_index":129,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["revisions",{"_index":811,"title":{},"body":{"license.html":{}}}],["rfb",{"_index":696,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rights",{"_index":449,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["risks",{"_index":976,"title":{},"body":{"license.html":{}}}],["routes",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["royalty",{"_index":858,"title":{},"body":{"license.html":{}}}],["rules",{"_index":308,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["run",{"_index":534,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["running",{"_index":431,"title":{},"body":{"contributing.html":{}}}],["runtime",{"_index":511,"title":{},"body":{"contributing.html":{}}}],["rxjs",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":277,"title":{},"body":{"injectables/CustomerService.html":{},"contributing.html":{},"license.html":{}}}],["scalable",{"_index":705,"title":{},"body":{"index.html":{}}}],["scope",{"_index":604,"title":{},"body":{"contributing.html":{}}}],["screenshots",{"_index":634,"title":{},"body":{"contributing.html":{}}}],["sdk",{"_index":510,"title":{},"body":{"contributing.html":{}}}],["search",{"_index":411,"title":{},"body":{"contributing.html":{}}}],["section",{"_index":353,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["sections",{"_index":751,"title":{},"body":{"license.html":{}}}],["security",{"_index":522,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":339,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["seems",{"_index":438,"title":{},"body":{"contributing.html":{}}}],["sell",{"_index":870,"title":{},"body":{"license.html":{}}}],["sensitive",{"_index":525,"title":{},"body":{"contributing.html":{}}}],["sent",{"_index":529,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["separable",{"_index":818,"title":{},"body":{"license.html":{}}}],["separate",{"_index":942,"title":{},"body":{"license.html":{}}}],["serve",{"_index":642,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":693,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["service",{"_index":236,"title":{},"body":{"injectables/CustomerService.html":{},"license.html":{}}}],["shall",{"_index":749,"title":{},"body":{"license.html":{}}}],["shares",{"_index":779,"title":{},"body":{"license.html":{}}}],["shouldn't",{"_index":456,"title":{},"body":{"contributing.html":{}}}],["show",{"_index":371,"title":{},"body":{"contributing.html":{}}}],["side",{"_index":481,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["skip",{"_index":285,"title":{},"body":{"injectables/CustomerService.html":{}}}],["small",{"_index":615,"title":{},"body":{"contributing.html":{}}}],["smooth",{"_index":360,"title":{},"body":{"contributing.html":{}}}],["software",{"_index":789,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1017,"title":{},"body":{"license.html":{}}}],["solely",{"_index":972,"title":{},"body":{"license.html":{}}}],["solved",{"_index":491,"title":{},"body":{"contributing.html":{}}}],["someone",{"_index":544,"title":{},"body":{"contributing.html":{}}}],["soon",{"_index":440,"title":{},"body":{"contributing.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"modules/CustomerModule.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"index.html":{},"license.html":{}}}],["special",{"_index":990,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1042,"title":{},"body":{"license.html":{}}}],["sponsors",{"_index":726,"title":{},"body":{"index.html":{}}}],["src/.../helper.ts",{"_index":690,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":689,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/customer/customer.controller.ts",{"_index":110,"title":{},"body":{"controllers/CustomerController.html":{},"coverage.html":{}}}],["src/customer/customer.controller.ts:31",{"_index":124,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:42",{"_index":134,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:52",{"_index":156,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:62",{"_index":149,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:75",{"_index":164,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.controller.ts:90",{"_index":159,"title":{},"body":{"controllers/CustomerController.html":{}}}],["src/customer/customer.module.ts",{"_index":226,"title":{},"body":{"modules/CustomerModule.html":{}}}],["src/customer/customer.service.ts",{"_index":235,"title":{},"body":{"injectables/CustomerService.html":{},"coverage.html":{}}}],["src/customer/customer.service.ts:109",{"_index":255,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:122",{"_index":261,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:14",{"_index":242,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:28",{"_index":243,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:52",{"_index":247,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:66",{"_index":254,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:76",{"_index":253,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/customer.service.ts:92",{"_index":259,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/customer/dto/create",{"_index":6,"title":{},"body":{"classes/CreateCustomerDto.html":{},"coverage.html":{}}}],["src/customer/dto/update",{"_index":295,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["src/customer/entities/customer.entity.ts",{"_index":66,"title":{},"body":{"entities/Customer.html":{},"coverage.html":{}}}],["src/customer/entities/customer.entity.ts:13",{"_index":90,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:19",{"_index":87,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:25",{"_index":96,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:31",{"_index":93,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:37",{"_index":80,"title":{},"body":{"entities/Customer.html":{}}}],["src/customer/entities/customer.entity.ts:43",{"_index":74,"title":{},"body":{"entities/Customer.html":{}}}],["src/helper/helper",{"_index":267,"title":{},"body":{"injectables/CustomerService.html":{}}}],["src/helper/helper.ts",{"_index":654,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":656,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stack",{"_index":495,"title":{},"body":{"contributing.html":{}}}],["star",{"_index":375,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":713,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":716,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":718,"title":{},"body":{"index.html":{}}}],["started",{"_index":302,"title":{"changelog.html":{},"contributing.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["starter",{"_index":709,"title":{},"body":{"index.html":{}}}],["starts",{"_index":691,"title":{},"body":{"miscellaneous/functions.html":{}}}],["state",{"_index":936,"title":{},"body":{"license.html":{}}}],["stated",{"_index":868,"title":{},"body":{"license.html":{}}}],["statement",{"_index":931,"title":{},"body":{"license.html":{}}}],["statements",{"_index":649,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":906,"title":{},"body":{"license.html":{}}}],["stay",{"_index":731,"title":{},"body":{"index.html":{}}}],["step",{"_index":628,"title":{},"body":{"contributing.html":{}}}],["steps",{"_index":470,"title":{},"body":{"contributing.html":{}}}],["still",{"_index":416,"title":{},"body":{"contributing.html":{}}}],["stoppage",{"_index":999,"title":{},"body":{"license.html":{}}}],["string",{"_index":37,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["string})@isdatestring()@isnotempty",{"_index":33,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["string})@isstring()@isnotempty",{"_index":43,"title":{},"body":{"classes/CreateCustomerDto.html":{}}}],["strong",{"_index":606,"title":{},"body":{"contributing.html":{}}}],["styleguides",{"_index":394,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":850,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":864,"title":{},"body":{"license.html":{}}}],["submission",{"_index":933,"title":{},"body":{"license.html":{}}}],["submit",{"_index":520,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["submitted",{"_index":826,"title":{},"body":{"license.html":{}}}],["submitting",{"_index":453,"title":{},"body":{"contributing.html":{}}}],["subsequently",{"_index":846,"title":{},"body":{"license.html":{}}}],["subset",{"_index":616,"title":{},"body":{"contributing.html":{}}}],["such",{"_index":575,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["suggested",{"_index":597,"title":{},"body":{"contributing.html":{}}}],["suggesting",{"_index":391,"title":{},"body":{"contributing.html":{}}}],["suggestion",{"_index":582,"title":{},"body":{"contributing.html":{}}}],["suggestions",{"_index":591,"title":{},"body":{"contributing.html":{}}}],["suitable",{"_index":414,"title":{},"body":{"contributing.html":{}}}],["supersede",{"_index":941,"title":{},"body":{"license.html":{}}}],["support",{"_index":370,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{},"modules.html":{}}}],["sure",{"_index":350,"title":{},"body":{"contributing.html":{}}}],["svg",{"_index":1047,"title":{},"body":{"modules.html":{}}}],["swagge",{"_index":1058,"title":{},"body":{"todo.html":{}}}],["swagger",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["syntax",{"_index":1036,"title":{},"body":{"license.html":{}}}],["system",{"_index":68,"title":{},"body":{"entities/Customer.html":{}}}],["systems",{"_index":836,"title":{},"body":{"license.html":{}}}],["table",{"_index":340,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":568,"title":{},"body":{"contributing.html":{}}}],["tags",{"_index":574,"title":{},"body":{"contributing.html":{}}}],["take",{"_index":286,"title":{},"body":{"injectables/CustomerService.html":{},"contributing.html":{}}}],["taking",{"_index":333,"title":{},"body":{"contributing.html":{}}}],["talk",{"_index":538,"title":{},"body":{"contributing.html":{}}}],["targeting",{"_index":617,"title":{},"body":{"contributing.html":{}}}],["team",{"_index":397,"title":{},"body":{"contributing.html":{}}}],["tell",{"_index":383,"title":{},"body":{"contributing.html":{}}}],["terminate",{"_index":892,"title":{},"body":{"license.html":{}}}],["terms",{"_index":745,"title":{},"body":{"license.html":{}}}],["test",{"_index":553,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["test:covsupport",{"_index":722,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":721,"title":{},"body":{"index.html":{}}}],["testing",{"_index":659,"title":{},"body":{"dependencies.html":{}}}],["tests",{"_index":686,"title":{},"body":{"dependencies.html":{},"index.html":{},"todo.html":{}}}],["text",{"_index":913,"title":{},"body":{"license.html":{}}}],["thanks",{"_index":332,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["that's",{"_index":367,"title":{},"body":{"contributing.html":{}}}],["theory",{"_index":981,"title":{},"body":{"license.html":{}}}],["therefore",{"_index":463,"title":{},"body":{"contributing.html":{}}}],["thereof",{"_index":823,"title":{},"body":{"license.html":{}}}],["thiago",{"_index":47,"title":{},"body":{"classes/CreateCustomerDto.html":{},"changelog.html":{}}}],["thiagoadsilva@gmail.com",{"_index":406,"title":{},"body":{"contributing.html":{}}}],["third",{"_index":920,"title":{},"body":{"license.html":{}}}],["this.customerservice.create(createcustomerdto",{"_index":197,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findall(page",{"_index":200,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findbycpf(cpf",{"_index":209,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.findone(id",{"_index":202,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.remove(id",{"_index":216,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.customerservice.update(id",{"_index":214,"title":{},"body":{"controllers/CustomerController.html":{}}}],["this.findone(id",{"_index":293,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.create(createcustomerdto",{"_index":281,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.find",{"_index":288,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.findandcount",{"_index":284,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.findoneby",{"_index":279,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.findoneby({id",{"_index":287,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.preload",{"_index":292,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.remove(customer",{"_index":294,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.repository.save(customer",{"_index":282,"title":{},"body":{"injectables/CustomerService.html":{}}}],["this.validatecpf(cpf",{"_index":274,"title":{},"body":{"injectables/CustomerService.html":{}}}],["those",{"_index":564,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["through",{"_index":580,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["throw",{"_index":205,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["throws",{"_index":270,"title":{},"body":{"injectables/CustomerService.html":{}}}],["time",{"_index":334,"title":{},"body":{"contributing.html":{}}}],["timestamp",{"_index":84,"title":{},"body":{"entities/Customer.html":{}}}],["title",{"_index":626,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["todo",{"_index":1052,"title":{"todo.html":{}},"body":{}}],["tool",{"_index":639,"title":{},"body":{"contributing.html":{}}}],["tort",{"_index":982,"title":{},"body":{"license.html":{}}}],["total",{"_index":283,"title":{},"body":{"injectables/CustomerService.html":{}}}],["touch",{"_index":732,"title":{},"body":{"index.html":{}}}],["trace",{"_index":500,"title":{},"body":{"contributing.html":{}}}],["traceback",{"_index":501,"title":{},"body":{"contributing.html":{}}}],["track",{"_index":532,"title":{},"body":{"contributing.html":{}}}],["tracked",{"_index":623,"title":{},"body":{"contributing.html":{}}}],["tracker",{"_index":493,"title":{},"body":{"contributing.html":{}}}],["tracking",{"_index":837,"title":{},"body":{"license.html":{}}}],["trade",{"_index":948,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":910,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":946,"title":{},"body":{"license.html":{}}}],["transactional",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["transfer",{"_index":871,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":794,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":671,"title":{},"body":{"dependencies.html":{}}}],["translation",{"_index":795,"title":{},"body":{"license.html":{}}}],["transmitted",{"_index":11,"title":{},"body":{"classes/CreateCustomerDto.html":{},"classes/UpdateCustomerDto.html":{}}}],["true",{"_index":79,"title":{},"body":{"entities/Customer.html":{},"miscellaneous/functions.html":{}}}],["try",{"_index":561,"title":{},"body":{"contributing.html":{}}}],["tweet",{"_index":376,"title":{},"body":{"contributing.html":{}}}],["twitter",{"_index":738,"title":{},"body":{"index.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/CreateCustomerDto.html":{},"entities/Customer.html":{},"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typeorm",{"_index":105,"title":{},"body":{"entities/Customer.html":{},"injectables/CustomerService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":228,"title":{},"body":{"modules/CustomerModule.html":{}}}],["typeormmodule.forfeature([customer",{"_index":232,"title":{},"body":{"modules/CustomerModule.html":{}}}],["types",{"_index":299,"title":{},"body":{"classes/UpdateCustomerDto.html":{},"contributing.html":{},"dependencies.html":{},"license.html":{}}}],["typescript",{"_index":708,"title":{},"body":{"index.html":{}}}],["ui",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["unacceptable",{"_index":404,"title":{},"body":{"contributing.html":{}}}],["under",{"_index":451,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["understand",{"_index":589,"title":{},"body":{"contributing.html":{}}}],["union",{"_index":758,"title":{},"body":{"license.html":{}}}],["unique",{"_index":78,"title":{},"body":{"entities/Customer.html":{},"controllers/CustomerController.html":{},"miscellaneous/functions.html":{}}}],["unit",{"_index":719,"title":{},"body":{"index.html":{},"todo.html":{}}}],["unknown",{"_index":257,"title":{},"body":{"injectables/CustomerService.html":{}}}],["unless",{"_index":934,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1051,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":172,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["unprocessableentityexception(`customer",{"_index":280,"title":{},"body":{"injectables/CustomerService.html":{}}}],["unprocessableentityexception(`invalid",{"_index":206,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["until",{"_index":570,"title":{},"body":{"contributing.html":{}}}],["up",{"_index":461,"title":{},"body":{"contributing.html":{}}}],["update",{"_index":120,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["update(@param('id",{"_index":210,"title":{},"body":{"controllers/CustomerController.html":{}}}],["update(id",{"_index":161,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["updatecustomerdto",{"_index":162,"title":{"classes/UpdateCustomerDto.html":{}},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{},"classes/UpdateCustomerDto.html":{},"coverage.html":{}}}],["updatecustomerdto.cpf",{"_index":212,"title":{},"body":{"controllers/CustomerController.html":{}}}],["updated",{"_index":98,"title":{},"body":{"entities/Customer.html":{},"injectables/CustomerService.html":{}}}],["updated_at",{"_index":95,"title":{},"body":{"entities/Customer.html":{}}}],["updatedat",{"_index":71,"title":{},"body":{"entities/Customer.html":{}}}],["updatedatecolumn",{"_index":102,"title":{},"body":{"entities/Customer.html":{}}}],["updatedatecolumn({name",{"_index":94,"title":{},"body":{"entities/Customer.html":{}}}],["updates",{"_index":165,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["uphold",{"_index":402,"title":{},"body":{"contributing.html":{}}}],["use",{"_index":531,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["useful",{"_index":613,"title":{},"body":{"contributing.html":{}}}],["users",{"_index":488,"title":{},"body":{"contributing.html":{}}}],["using",{"_index":475,"title":{},"body":{"contributing.html":{},"license.html":{},"todo.html":{}}}],["usually",{"_index":547,"title":{},"body":{"contributing.html":{}}}],["valid",{"_index":263,"title":{},"body":{"injectables/CustomerService.html":{},"miscellaneous/functions.html":{}}}],["validatecpf",{"_index":239,"title":{},"body":{"injectables/CustomerService.html":{}}}],["validatecpf(cpf",{"_index":260,"title":{},"body":{"injectables/CustomerService.html":{}}}],["validator",{"_index":54,"title":{},"body":{"classes/CreateCustomerDto.html":{},"dependencies.html":{}}}],["value",{"_index":136,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["valued",{"_index":338,"title":{},"body":{"contributing.html":{}}}],["values",{"_index":190,"title":{},"body":{"controllers/CustomerController.html":{},"injectables/CustomerService.html":{}}}],["varchar",{"_index":75,"title":{},"body":{"entities/Customer.html":{}}}],["verbal",{"_index":830,"title":{},"body":{"license.html":{}}}],["version",{"_index":477,"title":{},"body":{"contributing.html":{},"license.html":{},"properties.html":{}}}],["versions",{"_index":433,"title":{},"body":{"contributing.html":{}}}],["very",{"_index":373,"title":{},"body":{"contributing.html":{}}}],["vulnerabilities",{"_index":524,"title":{},"body":{"contributing.html":{}}}],["want",{"_index":388,"title":{},"body":{"contributing.html":{}}}],["warranties",{"_index":965,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":959,"title":{},"body":{"license.html":{}}}],["watch",{"_index":714,"title":{},"body":{"index.html":{}}}],["way",{"_index":563,"title":{},"body":{"contributing.html":{}}}],["ways",{"_index":343,"title":{},"body":{"contributing.html":{}}}],["website",{"_index":736,"title":{},"body":{"index.html":{}}}],["well",{"_index":573,"title":{},"body":{"contributing.html":{}}}],["wherever",{"_index":919,"title":{},"body":{"license.html":{}}}],["whether",{"_index":537,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["whole",{"_index":815,"title":{},"body":{"license.html":{}}}],["windows",{"_index":503,"title":{},"body":{"contributing.html":{}}}],["within",{"_index":848,"title":{},"body":{"license.html":{}}}],["without",{"_index":896,"title":{},"body":{"license.html":{}}}],["work",{"_index":632,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["works",{"_index":808,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":854,"title":{},"body":{"license.html":{}}}],["write",{"_index":419,"title":{},"body":{"contributing.html":{}}}],["writing",{"_index":620,"title":{},"body":{"contributing.html":{},"license.html":{},"todo.html":{}}}],["written",{"_index":831,"title":{},"body":{"license.html":{}}}],["x86",{"_index":506,"title":{},"body":{"contributing.html":{}}}],["you'd",{"_index":729,"title":{},"body":{"index.html":{}}}],["you're",{"_index":430,"title":{},"body":{"contributing.html":{}}}],["yyyy",{"_index":29,"title":{},"body":{"classes/CreateCustomerDto.html":{},"license.html":{}}}],["zoom",{"_index":223,"title":{},"body":{"modules/CustomerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/CreateCustomerDto.html":{"url":"classes/CreateCustomerDto.html","title":"class - CreateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/create-customer.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Definition of information that will be transmitted about new customers in requests\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                cpf\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '1998-04-20', description: 'Birth of date, in \"yyyy-MM-dd format.', type: String})@IsDateString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:35\n                        \n                    \n\n            \n                \n                    Customer's date of birth\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '498.967.060-42', description: 'Number of brazilian identification - CPF.', type: String})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:26\n                        \n                    \n\n            \n                \n                    Customer's CPF, a brazilian national document\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Thiago Delgado', description: 'Customer's name.', type: String})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/dto/create-customer.dto.ts:17\n                        \n                    \n\n            \n                \n                    Customer's name\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, IsDateString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\n/**\n * Definition of information that will be transmitted about new customers in requests\n * @class CreateCustomerDto\n */\nexport class CreateCustomerDto {\n\n  /**\n   * Customer's name\n   * @@property name\n   */\n  @ApiProperty({ example: 'Thiago Delgado', description: 'Customer\\'s name.', type: String })\n  @IsString()\n  @IsNotEmpty()\n  name: string;\n\n  /**\n   * Customer's CPF, a brazilian national document\n   * @property cpf\n   */\n  @ApiProperty({ example: '498.967.060-42', description: 'Number of brazilian identification - CPF.', type: String })\n  @IsString()\n  @IsNotEmpty()\n  cpf: string;\n\n  /**\n   * Customer's date of birth\n   * @property birthDate\n   */\n  @ApiProperty({ example: '1998-04-20', description: 'Birth of date, in \"yyyy-MM-dd format.', type: String  })\n  @IsDateString()\n  @IsNotEmpty()\n  birthDate: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Customer.html":{"url":"entities/Customer.html","title":"entity - Customer","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Customer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/entities/customer.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                Entity that represents a customer in the system.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                birthDate\n                            \n                            \n                                cpf\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        birthDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'birth_date', type: 'date'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:43\n                        \n                    \n\n            \n                \n                    Date of birth of the customer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'cpf', type: 'varchar', length: 11, unique: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:37\n                        \n                    \n\n            \n                \n                    CPF (Brazilian Document Registry) of the customer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({name: 'created_at', type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:19\n                        \n                    \n\n            \n                \n                    Date when the customer was created\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:13\n                        \n                    \n\n            \n                \n                    Unique identifier of the customer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({name: 'name', type: 'varchar', length: 255})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:31\n                        \n                    \n\n            \n                \n                    Name of the customer\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({name: 'updated_at', type: 'timestamp', default: () => CURRENT_TIMESTAMP(6)})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/customer/entities/customer.entity.ts:25\n                        \n                    \n\n            \n                \n                    Date when the customer was last updated\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, PrimaryGeneratedColumn, UpdateDateColumn, CreateDateColumn, BeforeInsert } from \"typeorm\";\n\n/**\n * Entity that represents a customer in the system.\n */\n@Entity()\nexport class Customer extends BaseEntity {\n\n  /**\n   * Unique identifier of the customer\n   */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  /**\n   * Date when the customer was created\n   */\n  @CreateDateColumn({ name: 'created_at', type: \"timestamp\", default: () => \"CURRENT_TIMESTAMP(6)\" })\n  createdAt: Date;\n\n  /**\n   * Date when the customer was last updated\n   */\n  @UpdateDateColumn({ name: 'updated_at', type: 'timestamp', default: () => 'CURRENT_TIMESTAMP(6)' })\n  updatedAt: Date;\n\n  /**\n   * Name of the customer\n   */\n  @Column({ name: 'name', type: 'varchar', length: 255 })\n  name: string;\n\n  /**\n   * CPF (Brazilian Document Registry) of the customer\n   */\n  @Column({ name: 'cpf', type: 'varchar', length: 11, unique: true })\n  cpf: string;\n\n  /**\n   * Date of birth of the customer\n   */\n  @Column({ name: 'birth_date', type: 'date' })\n  birthDate: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomerController.html":{"url":"controllers/CustomerController.html","title":"controller - CustomerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                customer\n            \n\n\n            \n                Description\n            \n            \n                Customer's controller, with methods for handling customer's requests\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCpf\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createCustomerDto: CreateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({description: 'Create a new customer'})@HttpCode(HttpStatus.CREATED)\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:31\n                \n            \n\n\n            \n                \n                    Creates a new customer in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCustomerDto\n                                    \n                                                CreateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise with the customer register\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(page: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:42\n                \n            \n\n\n            \n                \n                    Fetches the customers from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        Page number in pagination\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                    \n                                        Record number per page in pagination\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise with the list of customers and the amount of registers found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCpf\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCpf(cpf: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('cpf/:cpf')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:62\n                \n            \n\n\n            \n                \n                    Fetches the list of customers from the database, identified by cpf informed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An identifier of a brazilian person. A customer with this cpf should exist in the database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise with the list of customers\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:52\n                \n            \n\n\n            \n                \n                    Fetches the unique customer from the database, identified by id informed\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An identifier of a customer. A customer with this id should exist in the database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise with the customer register\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:90\n                \n            \n\n\n            \n                \n                    Deletes a customer from the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An identifier of a customer. A customer with this id should exist in the database\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise with the customer register\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/customer/customer.controller.ts:75\n                \n            \n\n\n            \n                \n                    Updates the customer in the database, identified by id\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An identifier of a customer. A customer with this id should exist in the database\n\n                                    \n                                \n                                \n                                    updateCustomerDto\n                                    \n                                                UpdateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        A promise with the customer register\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, Query, UnprocessableEntityException, HttpCode, HttpStatus } from '@nestjs/common';\nimport { CustomerService } from './customer.service';\nimport { Customer } from './entities/customer.entity';\nimport { CreateCustomerDto } from './dto/create-customer.dto';\nimport { UpdateCustomerDto } from './dto/update-customer.dto';\nimport { ApiOperation, ApiProperty, ApiTags } from '@nestjs/swagger';\nimport { IsValidCpf} from '../helper/helper';\n\n/**\n * Customer's controller, with methods for handling customer's requests\n * @class CreateCustomerDto\n */\n@ApiTags('customer')\n@Controller('customer')\nexport class CustomerController {\n\n  /**\n   * Constructor, initialize values of members in class\n   * @param CustomerService\n   */  \n  constructor(private readonly customerService: CustomerService) {}\n\n  /**\n   * Creates a new customer in the database\n   * @param CreateCustomerDto\n   * @returns A promise with the customer register\n   */\n  @Post()\n  @ApiOperation({ description: 'Create a new customer' })\n  @HttpCode(HttpStatus.CREATED)\n  create(@Body() createCustomerDto: CreateCustomerDto): Promise {\n    return this.customerService.create(createCustomerDto);\n  }\n\n  /**\n   * Fetches the customers from the database\n   * @param page Page number in pagination\n   * @param limit Record number per page in pagination\n   * @returns A promise with the list of customers and the amount of registers found\n   */\n  @Get()\n  async findAll(@Query('page') page: number = 1, @Query('limit') limit: number = 10): Promise {\n    return this.customerService.findAll(page, limit);\n  }\n\n  /**\n   * Fetches the unique customer from the database, identified by id informed\n   * @param id An identifier of a customer. A customer with this id should exist in the database\n   * @returns A promise with the customer register\n   */\n  @Get(':id')\n  findOne(@Param('id') id: string): Promise {\n    return this.customerService.findOne(id);\n  }\n\n  /**\n   * Fetches the list of customers from the database, identified by cpf informed\n   * @param cpf An identifier of a brazilian person. A customer with this cpf should exist in the database\n   * @returns A promise with the list of customers\n   */\n  @Get('cpf/:cpf')\n  async findByCpf(@Param('cpf') cpf: string): Promise {\n    if (!IsValidCpf(cpf)) {\n      throw new UnprocessableEntityException(`Invalid CPF data or format: '${cpf}'.`);\n    }\n    return await this.customerService.findByCpf(cpf);\n  }  \n\n  /**\n   * Updates the customer in the database, identified by id\n   * @param id An identifier of a customer. A customer with this id should exist in the database\n   * @returns A promise with the customer register\n   */\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateCustomerDto: UpdateCustomerDto): Promise {\n    const cpf = updateCustomerDto.cpf;\n    if (!IsValidCpf(cpf)) {\n      throw new UnprocessableEntityException(`Invalid CPF data or format: '${cpf}'.`);\n    }     \n    updateCustomerDto.cpf = cpf.replace(/[^\\d]+/g, '');\n    return this.customerService.update(id, updateCustomerDto);\n  }\n\n  /**\n   * Deletes a customer from the database\n   * @param id An identifier of a customer. A customer with this id should exist in the database\n   * @returns A promise with the customer register \n   */\n  @Delete(':id')\n  remove(@Param('id') id: string): Promise {\n    return this.customerService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CustomerModule.html":{"url":"modules/CustomerModule.html","title":"module - CustomerModule","body":"\n                   \n\n\n\n\n    Modules\n    CustomerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_providers\n\n\n\n\nCustomerService\n\nCustomerService\n\n\n\nCustomerModule\n\nCustomerModule\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/customer/customer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CustomerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomerController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Customer } from './entities/customer.entity';\nimport { CustomerService } from './customer.service';\nimport { CustomerController } from './customer.controller';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Customer])],\n  controllers: [CustomerController],\n  providers: [CustomerService]\n})\nexport class CustomerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomerService.html":{"url":"injectables/CustomerService.html","title":"injectable - CustomerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/customer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Customer's service, responsible for providing customer's data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findByCpf\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                validateCpf\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/customer/customer.service.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor, initialize values of members in class\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCustomerDto: CreateCustomerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:28\n                \n            \n\n\n            \n                \n                    Creates a new customer.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    createCustomerDto\n                                    \n                                                CreateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe DTO containing the data to create the customer.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The newly created customer.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(page: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:52\n                \n            \n\n\n            \n                \n                    Retrieves all customers, paginated.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    page\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        1\n                                    \n\n                                    \n                                        \nThe displayed page number.\n\n\n                                    \n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        10\n                                    \n\n                                    \n                                        \nThe number of records displayed per page.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        The retrieved customers, paginated.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByCpf\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByCpf(cpf: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:76\n                \n            \n\n\n            \n                \n                    Retrieves some customer by CPF.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe CPF of the customer.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The retrieved customer.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:66\n                \n            \n\n\n            \n                \n                    Retrieves some customer by ID.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the customer.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The retrieved customer.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:109\n                \n            \n\n\n            \n                \n                    Deletes an existing customer.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the customer to delete.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        The deleted customer.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateCustomerDto: UpdateCustomerDto)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:92\n                \n            \n\n\n            \n                \n                    Updates an existing customer.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe ID of the customer to update.\n\n\n                                    \n                                \n                                \n                                    updateCustomerDto\n                                    \n                                                UpdateCustomerDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe DTO containing the updated data for the customer.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The updated customer.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateCpf\n                        \n                    \n                \n            \n            \n                \nvalidateCpf(cpf: string)\n                \n            \n\n\n            \n                \n                    Defined in src/customer/customer.service.ts:122\n                \n            \n\n\n            \n                \n                    Checks if CPF informed is a valid number.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe number of the brazilian document.\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnprocessableEntityException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { IsValidCpf } from 'src/helper/helper';\nimport { Repository } from 'typeorm';\nimport { CreateCustomerDto } from './dto/create-customer.dto';\nimport { UpdateCustomerDto } from './dto/update-customer.dto';\nimport { Customer } from './entities/customer.entity';\n\n/**\n * Customer's service, responsible for providing customer's data\n * @class CreateCustomerDto\n */\n@Injectable()\nexport class CustomerService {\n\n  /**\n   * Constructor, initialize values of members in class\n   * @param repository\n   */ \n  constructor(@InjectRepository(Customer) private readonly repository: Repository) { }\n\n  /**\n   * Creates a new customer.\n   * @param createCustomerDto - The DTO containing the data to create the customer.\n   * @returns The newly created customer.\n   * @throws UnprocessableEntityException if the cpf is duplicated or invalid.\n   */\n  async create(createCustomerDto: CreateCustomerDto): Promise  {\n    const cpf = createCustomerDto.cpf;\n    createCustomerDto.cpf = cpf.replace(/[^\\d]+/g, '');\n    // Checks if is a valid CPF number\n    if (!this.validateCpf(cpf)) {\n      throw new UnprocessableEntityException(`Invalid CPF data or format: '${cpf}'.`);\n    }        \n    // Checks if already exists a customer with the same CPF\n    const existingCustomer = await this.repository.findOneBy({ cpf: createCustomerDto.cpf });\n    if (existingCustomer) {\n      throw new UnprocessableEntityException(`Customer with CPF '${createCustomerDto.cpf}' already exists.`);\n    }\n\n    const customer = this.repository.create(createCustomerDto);\n\n    return this.repository.save(customer);\n  }\n\n  /**\n   * Retrieves all customers, paginated.\n   * @param page - The displayed page number.\n   * @param limit - The number of records displayed per page.\n   * @returns The retrieved customers, paginated.\n   */  \n  async findAll(page: number = 1, limit: number = 10): Promise {\n    const [data, total] = await this.repository.findAndCount({\n      skip: (page - 1) * limit,\n      take: limit,\n    });\n    return { data, total };\n  }\n\n  /**\n   * Retrieves some customer by ID.\n   * @param id - The ID of the customer.\n   * @returns The retrieved customer.\n   * @throws NotFoundException if the customer's CPF is not found.\n   */\n  findOne(id: string): Promise {\n    return this.repository.findOneBy({id: id});\n  }\n\n  /**\n   * Retrieves some customer by CPF.\n   * @param cpf - The CPF of the customer.\n   * @returns The retrieved customer.\n   * @throws NotFoundException if the customer's CPF is not found.\n   */\n  async findByCpf(cpf: string): Promise {\n    const customers = this.repository.find({ where: { cpf: cpf } });\n    if ((await customers).length === 0) {\n      throw new NotFoundException(`Customer with CPF like '${cpf}' not found.`);\n    }\n\n    return customers;\n  }\n\n  /**\n   * Updates an existing customer.\n   * @param id - The ID of the customer to update.\n   * @param updateCustomerDto - The DTO containing the updated data for the customer.\n   * @returns The updated customer.\n   * @throws NotFoundException if the customer ID is not found.\n   */\n  async update(id: string, updateCustomerDto: UpdateCustomerDto): Promise {\n    const customer  = await this.repository.preload({\n      id: id,\n      ...updateCustomerDto,\n    });\n    if (!customer) {\n      throw new NotFoundException(`Customer #${id} not found.`);\n    }\n    return this.repository.save(customer);\n  }\n\n  /**\n   * Deletes an existing customer.\n   * @param id - The ID of the customer to delete.\n   * @returns The deleted customer. \n   * @throws NotFoundException if the customer ID is not found.\n   */\n  async remove(id: string) {\n    const customer = await this.findOne(id);\n    if (!customer) {\n      throw new NotFoundException(`Customer #'${id}' not found.`);\n    }    \n    return this.repository.remove(customer);\n  }\n\n  /**\n   * Checks if CPF informed is a valid number.\n   * @param cpf - The number of the brazilian document.\n   * @returns boolean.\n   */\n  validateCpf(cpf: string): boolean {\n    return IsValidCpf(cpf);\n  }  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCustomerDto.html":{"url":"classes/UpdateCustomerDto.html","title":"class - UpdateCustomerDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCustomerDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/customer/dto/update-customer.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Definition of the information that will be transmitted in the edition of the customers requests\n\n            \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateCustomerDto } from './create-customer.dto';\n  \n/**\n * Definition of the information that will be transmitted in the edition of the customers requests\n * @class CreateCustomerDto\n */\nexport class UpdateCustomerDto extends PartialType(CreateCustomerDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n\nMerge branch '02-basic-rules' into 03-documentation\nbootstrap\ncompodoc install and partial config\nMerge pull request #2 from thiago-a-delgado/basic-rules\nroutes, modeling and rules\nMerge pull request #1 from thiago-a-delgado/01-nestjs-installation\nnestjs install and config\nInitial commit\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\n\nContributing to Igma Challenge Customer API\nFirst off, thanks for taking the time to contribute! ❤️\nAll types of contributions are encouraged and valued. See the Table of Contents for different ways to help and details about how this project handles them. Please make sure to read the relevant section before making your contribution. It will make it a lot easier for us maintainers and smooth out the experience for all involved. The community looks forward to your contributions. 🎉\n\nAnd if you like the project, but just don't have time to contribute, that's fine. There are other easy ways to support the project and show your appreciation, which we would also be very happy about:\n\nStar the project\nTweet about it\nRefer this project in your project's readme\nMention the project at local meetups and tell your friends/colleagues\n\n\n\nTable of Contents\n\nCode of Conduct\nI Have a Question\nI Want To Contribute\nReporting Bugs\nSuggesting Enhancements\nYour First Code Contribution\nImproving The Documentation\n\n\nStyleguides\nCommit Messages\n\n\nJoin The Project Team\n\nCode of Conduct\nThis project and everyone participating in it is governed by the\nIgma Challenge Customer API Code of Conduct.\nBy participating, you are expected to uphold this code. Please report unacceptable behavior\nto thiagoadsilva@gmail.com.\nI Have a Question\n\nIf you want to ask a question, we assume that you have read the available Documentation.\n\nBefore you ask a question, it is best to search for existing Issues that might help you. In case you have found a suitable issue and still need clarification, you can write your question in this issue. It is also advisable to search the internet for answers first.\nIf you then still feel the need to ask a question and need clarification, we recommend the following:\n\nOpen an Issue.\nProvide as much context as you can about what you're running into.\nProvide project and platform versions (nodejs, npm, etc), depending on what seems relevant.\n\nWe will then take care of the issue as soon as possible.\n\n\nI Want To Contribute\n\nLegal Notice \nWhen contributing to this project, you must agree that you have authored 100% of the content, that you have the necessary rights to the content and that the content you contribute may be provided under the project license.\n\nReporting Bugs\n\nBefore Submitting a Bug Report\nA good bug report shouldn't leave others needing to chase you up for more information. Therefore, we ask you to investigate carefully, collect information and describe the issue in detail in your report. Please complete the following steps in advance to help us fix any potential bug as fast as possible.\n\nMake sure that you are using the latest version.\nDetermine if your bug is really a bug and not an error on your side e.g. using incompatible environment components/versions (Make sure that you have read the documentation. If you are looking for support, you might want to check this section).\nTo see if other users have experienced (and potentially already solved) the same issue you are having, check if there is not already a bug report existing for your bug or error in the bug tracker.\nAlso make sure to search the internet (including Stack Overflow) to see if users outside of the GitHub community have discussed the issue.\nCollect information about the bug:\nStack trace (Traceback)\nOS, Platform and Version (Windows, Linux, macOS, x86, ARM)\nVersion of the interpreter, compiler, SDK, runtime environment, package manager, depending on what seems relevant.\nPossibly your input and the output\nCan you reliably reproduce the issue? And can you also reproduce it with older versions?\n\n\n\n\nHow Do I Submit a Good Bug Report?\n\nYou must never report security related issues, vulnerabilities or bugs including sensitive information to the issue tracker, or elsewhere in public. Instead sensitive bugs must be sent by email to thiagoadsilva@gmail.com.\n\n\n\nWe use GitHub issues to track bugs and errors. If you run into an issue with the project:\n\nOpen an Issue. (Since we can't be sure at this point whether it is a bug or not, we ask you not to talk about a bug yet and not to label the issue.)\nExplain the behavior you would expect and the actual behavior.\nPlease provide as much context as possible and describe the reproduction steps that someone else can follow to recreate the issue on their own. This usually includes your code. For good bug reports you should isolate the problem and create a reduced test case.\nProvide the information you collected in the previous section.\n\nOnce it's filed:\n\nThe project team will label the issue accordingly.\nA team member will try to reproduce the issue with your provided steps. If there are no reproduction steps or no obvious way to reproduce the issue, the team will ask you for those steps and mark the issue as needs-repro. Bugs with the needs-repro tag will not be addressed until they are reproduced.\nIf the team is able to reproduce the issue, it will be marked needs-fix, as well as possibly other tags (such as critical), and the issue will be left to be implemented by someone.\n\n\n\n\nSuggesting Enhancements\nThis section guides you through submitting an enhancement suggestion for Igma Challenge Customer API, including completely new features and minor improvements to existing functionality. Following these guidelines will help maintainers and the community to understand your suggestion and find related suggestions.\n\nBefore Submitting an Enhancement\n\nMake sure that you are using the latest version.\nRead the documentation carefully and find out if the functionality is already covered, maybe by an individual configuration.\nPerform a search to see if the enhancement has already been suggested. If it has, add a comment to the existing issue instead of opening a new one.\nFind out whether your idea fits with the scope and aims of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Keep in mind that we want features that will be useful to the majority of our users and not just a small subset. If you're just targeting a minority of users, consider writing an add-on/plugin library.\n\n\nHow Do I Submit a Good Enhancement Suggestion?\nEnhancement suggestions are tracked as GitHub issues.\n\nUse a clear and descriptive title for the issue to identify the suggestion.\nProvide a step-by-step description of the suggested enhancement in as many details as possible.\nDescribe the current behavior and explain which behavior you expected to see instead and why. At this point you can also tell which alternatives do not work for you.\nYou may want to include screenshots and animated GIFs which help you demonstrate the steps or point out the part which the suggestion is related to. You can use this tool to record GIFs on macOS and Windows, and this tool or this tool on Linux. \nExplain why this enhancement would be useful to most Igma Challenge Customer API users. You may also want to point out the other projects that solved it better and which could serve as inspiration.\n\n\n\nYour First Code Contribution\n\n\nImproving The Documentation\n\n\nStyleguides\nCommit Messages\n\n\nJoin The Project Team\n\n\n\nAttribution\nThis guide is based on the contributing-gen. Make your own!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/customer/customer.controller.ts\n            \n            controller\n            CustomerController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/customer/customer.service.ts\n            \n            injectable\n            CustomerService\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/customer/dto/create-customer.dto.ts\n            \n            class\n            CreateCustomerDto\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/customer/dto/update-customer.dto.ts\n            \n            class\n            UpdateCustomerDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/customer/entities/customer.entity.ts\n            \n            entity\n            Customer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/helper/helper.ts\n            \n            function\n            IsValidCpf\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @golevelup/nestjs-testing : ^0.1.2\n        \n            @nestjs/axios : ^2.0.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.2.1\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            pg : ^8.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.6.2\n        \n            typeorm : ^0.3.12\n        \n            typeorm-transactional-tests : ^2.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IsValidCpf   (src/.../helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Starts the application in server\n\n\n                \n            \n        \n    \n    src/helper/helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsValidCpf\n                        \n                    \n                \n            \n            \n                \nIsValidCpf(cpf: string)\n                \n            \n\n\n\n\n            \n                \n                    Checks if the CPF entered is a valid number, according to the rules implemented by the RFB\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    cpf\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        A identifier of a brazilian citizen. This number is unique for each brazilian person.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean True or false\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CustomerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CustomerModule\n\n\n\ncluster_CustomerModule_providers\n\n\n\n\nCustomerService\n\nCustomerService\n\n\n\nCustomerModule\n\nCustomerModule\n\nCustomerModule -->\n\nCustomerService->CustomerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\n\nDocumentation of classes and functions.\nImplementation of unit tests using Jest.\nCreating Dockerfile image with NodeJs, NestJs, Jest, Swagge, Compodoc and PostgreSQL.\nImplementation of authentication.\nWriting a clear README file.\nPublish on github.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
